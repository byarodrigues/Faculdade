

Microchip MPLAB XC8 Assembler V2.20 build 20200408173844 
                                                                                               Thu Sep 17 20:05:27 2020

Microchip MPLAB XC8 C Compiler v2.20 (Free license) build 20200408173844 Og1 
     1                           	processor	18F4550
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1,noexec
     6                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     7                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     8                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     9                           	psect	text0,global,reloc=2,class=CODE,delta=1
    10                           	psect	text1,global,reloc=2,class=CODE,delta=1
    11                           	psect	text2,global,reloc=2,class=CODE,delta=1
    12                           	psect	text3,global,reloc=2,class=CODE,delta=1
    13                           	psect	text4,global,reloc=2,class=CODE,delta=1
    14                           	psect	text5,global,reloc=2,class=CODE,delta=1
    15                           	psect	text6,global,reloc=2,class=CODE,delta=1,group=2
    16                           	psect	text7,global,reloc=2,class=CODE,delta=1,group=2
    17                           	psect	text8,global,reloc=2,class=CODE,delta=1,group=1
    18                           	psect	text9,global,reloc=2,class=CODE,delta=1,group=1
    19                           	psect	text10,global,reloc=2,class=CODE,delta=1
    20                           	psect	text11,global,reloc=2,class=CODE,delta=1
    21                           	psect	text12,global,reloc=2,class=CODE,delta=1,group=1
    22                           	psect	intcodelo,global,reloc=2,class=CODE,delta=1
    23                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    24                           	psect	intcode_body,global,reloc=2,class=CODE,delta=1
    25                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    26                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    27                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
    28                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=1,noexec
    29                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
    30  0000                     
    31                           ; Version 2.20
    32                           ; Generated 12/02/2020 GMT
    33                           ; 
    34                           ; Copyright Â© 2020, Microchip Technology Inc. and its subsidiaries ("Microchip")
    35                           ; All rights reserved.
    36                           ; 
    37                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    38                           ; 
    39                           ; Redistribution and use in source and binary forms, with or without modification, are
    40                           ; permitted provided that the following conditions are met:
    41                           ; 
    42                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    43                           ;        conditions and the following disclaimer.
    44                           ; 
    45                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    46                           ;        of conditions and the following disclaimer in the documentation and/or other
    47                           ;        materials provided with the distribution.
    48                           ; 
    49                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    50                           ;        software without specific prior written permission.
    51                           ; 
    52                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    53                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    54                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    55                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    56                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    57                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    58                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    59                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    60                           ; 
    61                           ; 
    62                           ; Code-generator required, PIC18F4550 Definitions
    63                           ; 
    64                           ; SFR Addresses
    65  0000                     _TMR0	set	4054
    66  0000                     _ADRESL	set	4035
    67  0000                     _ADRESH	set	4036
    68  0000                     _ADCON0bits	set	4034
    69  0000                     _ADCON2bits	set	4032
    70  0000                     _ADCON1bits	set	4033
    71  0000                     _ADCON0	set	4034
    72  0000                     _PORTCbits	set	3970
    73  0000                     _PORTBbits	set	3969
    74  0000                     _INTCON2bits	set	4081
    75  0000                     _INTCONbits	set	4082
    76  0000                     _RCONbits	set	4048
    77  0000                     _T0CONbits	set	4053
    78  0000                     _PORTE	set	3972
    79  0000                     _PORTC	set	3970
    80  0000                     _PORTB	set	3969
    81  0000                     _PORTA	set	3968
    82  0000                     _TRISE	set	3990
    83  0000                     _TRISD	set	3989
    84  0000                     _TRISC	set	3988
    85  0000                     _TRISB	set	3987
    86  0000                     _TRISA	set	3986
    87  0000                     _OSCCONbits	set	4051
    88  0000                     _PORTEbits	set	3972
    89  0000                     _PORTD	set	3971
    90                           
    91                           	psect	smallconst
    92  000800                     __psmallconst:
    93                           	callstack 0
    94  000800  00                 	db	0
    95  000801                     STR_1:
    96  000801  43                 	db	67	;'C'
    97  000802  6F                 	db	111	;'o'
    98  000803  6E                 	db	110	;'n'
    99  000804  76                 	db	118	;'v'
   100  000805  2E                 	db	46
   101  000806  20                 	db	32
   102  000807  41                 	db	65	;'A'
   103  000808  2F                 	db	47
   104  000809  44                 	db	68	;'D'
   105  00080A  20                 	db	32
   106  00080B  65                 	db	101	;'e'
   107  00080C  20                 	db	32
   108  00080D  4C                 	db	76	;'L'
   109  00080E  43                 	db	67	;'C'
   110  00080F  44                 	db	68	;'D'
   111  000810  00                 	db	0
   112  000811                     STR_2:
   113  000811  54                 	db	84	;'T'
   114  000812  65                 	db	101	;'e'
   115  000813  6D                 	db	109	;'m'
   116  000814  70                 	db	112	;'p'
   117  000815  2E                 	db	46
   118  000816  3A                 	db	58	;':'
   119  000817  20                 	db	32
   120  000818  00                 	db	0
   121  000819  00                 	db	0	; dummy byte at the end
   122  0000                     
   123                           ; #config settings
   124                           
   125                           	psect	cinit
   126  000E56                     __pcinit:
   127                           	callstack 0
   128  000E56                     start_initialization:
   129                           	callstack 0
   130  000E56                     __initialization:
   131                           	callstack 0
   132                           
   133                           ; Clear objects allocated to COMRAM (4 bytes)
   134  000E56  6A29               	clrf	(__pbssCOMRAM+3)& (0+255),c
   135  000E58  6A28               	clrf	(__pbssCOMRAM+2)& (0+255),c
   136  000E5A  6A27               	clrf	(__pbssCOMRAM+1)& (0+255),c
   137  000E5C  6A26               	clrf	__pbssCOMRAM& (0+255),c
   138  000E5E                     end_of_initialization:
   139                           	callstack 0
   140  000E5E                     __end_of__initialization:
   141                           	callstack 0
   142  000E5E  902A               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
   143  000E60  922A               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
   144  000E62  0E00               	movlw	low (__Lmediumconst shr (0+16))
   145  000E64  6EF8               	movwf	tblptru,c
   146  000E66  0100               	movlb	0
   147  000E68  EF0D  F004         	goto	_main	;jump to C main() function
   148                           
   149                           	psect	bssCOMRAM
   150  000026                     __pbssCOMRAM:
   151                           	callstack 0
   152  000026                     _tempoLED:
   153                           	callstack 0
   154  000026                     	ds	2
   155  000028                     _flag1Botao1:
   156                           	callstack 0
   157  000028                     	ds	1
   158  000029                     _contaDebounce:
   159                           	callstack 0
   160  000029                     	ds	1
   161                           
   162                           	psect	cstackCOMRAM
   163  000001                     __pcstackCOMRAM:
   164                           	callstack 0
   165  000001                     ??_rotinaBaixaPrioridade:
   166                           
   167                           ; 1 bytes @ 0x0
   168  000001                     	ds	1
   169  000002                     ?_adc_amostra:
   170                           	callstack 0
   171  000002                     ?___lwdiv:
   172                           	callstack 0
   173  000002                     ?___lwmod:
   174                           	callstack 0
   175  000002                     lcd_wr@val:
   176                           	callstack 0
   177  000002                     ___lwdiv@dividend:
   178                           	callstack 0
   179  000002                     ___lwmod@dividend:
   180                           	callstack 0
   181                           
   182                           ; 2 bytes @ 0x1
   183  000002                     	ds	1
   184  000003                     ??_lcd_cmd:
   185  000003                     ??_lcd_dat:
   186                           
   187                           ; 1 bytes @ 0x2
   188  000003                     	ds	1
   189  000004                     ??_adc_amostra:
   190  000004                     lcd_cmd@val:
   191                           	callstack 0
   192  000004                     lcd_dat@val:
   193                           	callstack 0
   194  000004                     ___lwdiv@divisor:
   195                           	callstack 0
   196  000004                     ___lwmod@divisor:
   197                           	callstack 0
   198                           
   199                           ; 2 bytes @ 0x3
   200  000004                     	ds	1
   201  000005                     ??_lcd_init:
   202  000005                     lcd_str@str:
   203                           	callstack 0
   204                           
   205                           ; 2 bytes @ 0x4
   206  000005                     	ds	1
   207  000006                     ___lwmod@counter:
   208                           	callstack 0
   209  000006                     ___lwdiv@quotient:
   210                           	callstack 0
   211                           
   212                           ; 2 bytes @ 0x5
   213  000006                     	ds	1
   214  000007                     ??_lcd_str:
   215                           
   216                           ; 1 bytes @ 0x6
   217  000007                     	ds	1
   218  000008                     adc_amostra@canal:
   219                           	callstack 0
   220  000008                     ___lwdiv@counter:
   221                           	callstack 0
   222                           
   223                           ; 1 bytes @ 0x7
   224  000008                     	ds	1
   225  000009                     ?___wmul:
   226                           	callstack 0
   227  000009                     lcd_str@i:
   228                           	callstack 0
   229  000009                     ___wmul@multiplier:
   230                           	callstack 0
   231  000009                     utoa@buf:
   232                           	callstack 0
   233                           
   234                           ; 2 bytes @ 0x8
   235  000009                     	ds	2
   236  00000B                     ___wmul@multiplicand:
   237                           	callstack 0
   238  00000B                     utoa@val:
   239                           	callstack 0
   240                           
   241                           ; 2 bytes @ 0xA
   242  00000B                     	ds	2
   243  00000D                     ___wmul@product:
   244                           	callstack 0
   245  00000D                     utoa@base:
   246                           	callstack 0
   247                           
   248                           ; 2 bytes @ 0xC
   249  00000D                     	ds	2
   250  00000F                     utoa@v:
   251                           	callstack 0
   252                           
   253                           ; 2 bytes @ 0xE
   254  00000F                     	ds	2
   255  000011                     utoa@c:
   256                           	callstack 0
   257                           
   258                           ; 1 bytes @ 0x10
   259  000011                     	ds	1
   260  000012                     itoa@buf:
   261                           	callstack 0
   262                           
   263                           ; 2 bytes @ 0x11
   264  000012                     	ds	2
   265  000014                     itoa@val:
   266                           	callstack 0
   267                           
   268                           ; 2 bytes @ 0x13
   269  000014                     	ds	2
   270  000016                     itoa@base:
   271                           	callstack 0
   272                           
   273                           ; 2 bytes @ 0x15
   274  000016                     	ds	2
   275  000018                     
   276                           ; 1 bytes @ 0x17
   277  000018                     	ds	2
   278  00001A                     ??_main:
   279                           
   280                           ; 1 bytes @ 0x19
   281  00001A                     	ds	2
   282  00001C                     main@str:
   283                           	callstack 0
   284                           
   285                           ; 6 bytes @ 0x1B
   286  00001C                     	ds	6
   287  000022                     main@tmpi:
   288                           	callstack 0
   289                           
   290                           ; 2 bytes @ 0x21
   291  000022                     	ds	2
   292  000024                     main@flag2Botao1:
   293                           	callstack 0
   294                           
   295                           ; 1 bytes @ 0x23
   296  000024                     	ds	1
   297  000025                     main@funcaoRB0:
   298                           	callstack 0
   299                           
   300                           ; 1 bytes @ 0x24
   301  000025                     	ds	1
   302                           
   303 ;;
   304 ;;Main: autosize = 0, tempsize = 1, incstack = 0, save=0
   305 ;;
   306 ;; *************** function _main *****************
   307 ;; Defined at:
   308 ;;		line 20 in file "main.c"
   309 ;; Parameters:    Size  Location     Type
   310 ;;		None
   311 ;; Auto vars:     Size  Location     Type
   312 ;;  str             6   27[COMRAM] unsigned char [6]
   313 ;;  tmpi            2   33[COMRAM] unsigned int 
   314 ;;  funcaoRB0       1   36[COMRAM] unsigned char 
   315 ;;  flag2Botao1     1   35[COMRAM] _Bool 
   316 ;;  flag1Botao2     1    0        _Bool 
   317 ;; Return value:  Size  Location     Type
   318 ;;                  1    wreg      void 
   319 ;; Registers used:
   320 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
   321 ;; Tracked objects:
   322 ;;		On entry : 0/0
   323 ;;		On exit  : 0/0
   324 ;;		Unchanged: 0/0
   325 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   326 ;;      Params:         0       0       0       0       0       0       0       0       0
   327 ;;      Locals:        11       0       0       0       0       0       0       0       0
   328 ;;      Temps:          1       0       0       0       0       0       0       0       0
   329 ;;      Totals:        12       0       0       0       0       0       0       0       0
   330 ;;Total ram usage:       12 bytes
   331 ;; Hardware stack levels required when called:    5
   332 ;; This function calls:
   333 ;;		___wmul
   334 ;;		_adc_amostra
   335 ;;		_adc_init
   336 ;;		_itoa
   337 ;;		_lcd_cmd
   338 ;;		_lcd_dat
   339 ;;		_lcd_init
   340 ;;		_lcd_str
   341 ;; This function is called by:
   342 ;;		Startup code after reset
   343 ;; This function uses a non-reentrant model
   344 ;;
   345                           
   346                           	psect	text0
   347  00081A                     __ptext0:
   348                           	callstack 0
   349  00081A                     _main:
   350                           	callstack 26
   351  00081A                     
   352                           ;main.c: 23:     _Bool flag2Botao1 = 0;
   353  00081A  0E00               	movlw	0
   354  00081C  6E24               	movwf	main@flag2Botao1^0,c
   355                           
   356                           ;main.c: 24:     uint8_t funcaoRB0 = 0;
   357  00081E  0E00               	movlw	0
   358  000820  6E25               	movwf	main@funcaoRB0^0,c
   359                           
   360                           ;main.c: 25:     char str[6];;main.c: 26:     unsigned int tmpi;;main.c: 29:     OSCCONb
      +                          its.SCS = 0b00;
   361  000822  0EFC               	movlw	-4
   362  000824  16D3               	andwf	211,f,c	;volatile
   363                           
   364                           ;main.c: 32:     TRISA = 0b00000001;
   365  000826  0E01               	movlw	1
   366  000828  6E92               	movwf	146,c	;volatile
   367                           
   368                           ;main.c: 33:     TRISB = 0b00000011;
   369  00082A  0E03               	movlw	3
   370  00082C  6E93               	movwf	147,c	;volatile
   371                           
   372                           ;main.c: 34:     TRISC = 0;
   373  00082E  0E00               	movlw	0
   374  000830  6E94               	movwf	148,c	;volatile
   375                           
   376                           ;main.c: 35:     TRISD = 0;
   377  000832  0E00               	movlw	0
   378  000834  6E95               	movwf	149,c	;volatile
   379                           
   380                           ;main.c: 36:     TRISE = 0;
   381  000836  0E00               	movlw	0
   382  000838  6E96               	movwf	150,c	;volatile
   383                           
   384                           ;main.c: 39:     PORTA=0x00;
   385  00083A  0E00               	movlw	0
   386  00083C  6E80               	movwf	128,c	;volatile
   387                           
   388                           ;main.c: 40:     PORTB=0x00;
   389  00083E  0E00               	movlw	0
   390  000840  6E81               	movwf	129,c	;volatile
   391                           
   392                           ;main.c: 41:     PORTC=0x00;
   393  000842  0E00               	movlw	0
   394  000844  6E82               	movwf	130,c	;volatile
   395                           
   396                           ;main.c: 42:     PORTD=0x00;
   397  000846  0E00               	movlw	0
   398  000848  6E83               	movwf	131,c	;volatile
   399                           
   400                           ;main.c: 43:     PORTE=0x00;
   401  00084A  0E00               	movlw	0
   402  00084C  6E84               	movwf	132,c	;volatile
   403  00084E                     
   404                           ;main.c: 47:     T0CONbits.TMR0ON = 1;
   405  00084E  8ED5               	bsf	213,7,c	;volatile
   406  000850                     
   407                           ;main.c: 48:     T0CONbits.T08BIT = 1;
   408  000850  8CD5               	bsf	213,6,c	;volatile
   409  000852                     
   410                           ;main.c: 49:     T0CONbits.T0CS = 0;
   411  000852  9AD5               	bcf	213,5,c	;volatile
   412  000854                     
   413                           ;main.c: 50:     T0CONbits.PSA = 0;
   414  000854  96D5               	bcf	213,3,c	;volatile
   415                           
   416                           ;main.c: 51:     T0CONbits.T0PS = 0b110;
   417  000856  50D5               	movf	213,w,c	;volatile
   418  000858  0BF8               	andlw	-8
   419  00085A  0906               	iorlw	6
   420  00085C  6ED5               	movwf	213,c	;volatile
   421                           
   422                           ;main.c: 52:     TMR0=217;
   423  00085E  0E00               	movlw	0
   424  000860  6ED7               	movwf	215,c	;volatile
   425  000862  0ED9               	movlw	217
   426  000864  6ED6               	movwf	214,c	;volatile
   427  000866                     
   428                           ;main.c: 57:     RCONbits.IPEN = 1;
   429  000866  8ED0               	bsf	208,7,c	;volatile
   430  000868                     
   431                           ;main.c: 59:     INTCONbits.TMR0IE = 1;
   432  000868  8AF2               	bsf	242,5,c	;volatile
   433  00086A                     
   434                           ;main.c: 60:     INTCON2bits.TMR0IP = 1;
   435  00086A  84F1               	bsf	241,2,c	;volatile
   436  00086C                     
   437                           ;main.c: 62:     INTCONbits.GIEH = 1;
   438  00086C  8EF2               	bsf	242,7,c	;volatile
   439  00086E                     
   440                           ;main.c: 63:     INTCONbits.GIEL = 1;
   441  00086E  8CF2               	bsf	242,6,c	;volatile
   442  000870                     
   443                           ;main.c: 67:     lcd_init();
   444  000870  EC08  F006         	call	_lcd_init	;wreg free
   445  000874                     
   446                           ;main.c: 69:     adc_init();
   447  000874  EC19  F007         	call	_adc_init	;wreg free
   448  000878                     
   449                           ;main.c: 72:     lcd_cmd(0x0C);
   450  000878  0E0C               	movlw	12
   451  00087A  ECED  F006         	call	_lcd_cmd
   452  00087E                     l1317:
   453                           
   454                           ;main.c: 78:         if(tempoLED>=240){
   455  00087E  5027               	movf	(_tempoLED+1)^0,w,c
   456  000880  E109               	bnz	u440
   457  000882  0EF0               	movlw	240
   458  000884  5C26               	subwf	_tempoLED^0,w,c
   459  000886  A0D8               	btfss	status,0,c
   460  000888  EF48  F004         	goto	u441
   461  00088C  EF4A  F004         	goto	u440
   462  000890                     u441:
   463  000890  EFAC  F004         	goto	l1345
   464  000894                     u440:
   465  000894                     
   466                           ;main.c: 79:             PORTBbits.RB3 = ~PORTBbits.RB3;
   467  000894  B681               	btfsc	129,3,c	;volatile
   468  000896  EF4F  F004         	goto	u451
   469  00089A  EF52  F004         	goto	u450
   470  00089E                     u451:
   471  00089E  0E01               	movlw	1
   472  0008A0  EF53  F004         	goto	u456
   473  0008A4                     u450:
   474  0008A4  0E00               	movlw	0
   475  0008A6                     u456:
   476  0008A6  0AFF               	xorlw	255
   477  0008A8  6E1A               	movwf	??_main^0,c
   478  0008AA  461A               	rlncf	??_main^0,f,c
   479  0008AC  461A               	rlncf	??_main^0,f,c
   480  0008AE  461A               	rlncf	??_main^0,f,c
   481  0008B0  5081               	movf	129,w,c	;volatile
   482  0008B2  181A               	xorwf	??_main^0,w,c
   483  0008B4  0BF7               	andlw	-9
   484  0008B6  181A               	xorwf	??_main^0,w,c
   485  0008B8  6E81               	movwf	129,c	;volatile
   486  0008BA                     
   487                           ;main.c: 80:             tempoLED = 0;
   488  0008BA  0E00               	movlw	0
   489  0008BC  6E27               	movwf	(_tempoLED+1)^0,c
   490  0008BE  0E00               	movlw	0
   491  0008C0  6E26               	movwf	_tempoLED^0,c
   492  0008C2                     
   493                           ;main.c: 85:             tmpi=(((unsigned int) adc_amostra(0)*10)/8)-150;
   494  0008C2  0E00               	movlw	0
   495  0008C4  EC82  F005         	call	_adc_amostra
   496  0008C8  C002  F009         	movff	?_adc_amostra,___wmul@multiplier
   497  0008CC  C003  F00A         	movff	?_adc_amostra+1,___wmul@multiplier+1
   498  0008D0  0E00               	movlw	0
   499  0008D2  6E0C               	movwf	(___wmul@multiplicand+1)^0,c
   500  0008D4  0E0A               	movlw	10
   501  0008D6  6E0B               	movwf	___wmul@multiplicand^0,c
   502  0008D8  EC06  F007         	call	___wmul	;wreg free
   503  0008DC  90D8               	bcf	status,0,c
   504  0008DE  320A               	rrcf	(?___wmul+1)^0,f,c
   505  0008E0  3209               	rrcf	?___wmul^0,f,c
   506  0008E2  90D8               	bcf	status,0,c
   507  0008E4  320A               	rrcf	(?___wmul+1)^0,f,c
   508  0008E6  3209               	rrcf	?___wmul^0,f,c
   509  0008E8  90D8               	bcf	status,0,c
   510  0008EA  320A               	rrcf	(?___wmul+1)^0,f,c
   511  0008EC  3209               	rrcf	?___wmul^0,f,c
   512  0008EE  0E6A               	movlw	106
   513  0008F0  2409               	addwf	?___wmul^0,w,c
   514  0008F2  6E22               	movwf	main@tmpi^0,c
   515  0008F4  0EFF               	movlw	255
   516  0008F6  200A               	addwfc	(?___wmul+1)^0,w,c
   517  0008F8  6E23               	movwf	(main@tmpi+1)^0,c
   518  0008FA                     
   519                           ;main.c: 87:             itoa(str,tmpi,10);
   520  0008FA  0E1C               	movlw	low main@str
   521  0008FC  6E12               	movwf	itoa@buf^0,c
   522  0008FE  0E00               	movlw	high main@str
   523  000900  6E13               	movwf	(itoa@buf+1)^0,c
   524  000902  C022  F014         	movff	main@tmpi,itoa@val
   525  000906  C023  F015         	movff	main@tmpi+1,itoa@val+1
   526  00090A  0E00               	movlw	0
   527  00090C  6E17               	movwf	(itoa@base+1)^0,c
   528  00090E  0E0A               	movlw	10
   529  000910  6E16               	movwf	itoa@base^0,c
   530  000912  EC96  F006         	call	_itoa	;wreg free
   531  000916                     
   532                           ;main.c: 90:             lcd_cmd(0x80);
   533  000916  0E80               	movlw	128
   534  000918  ECED  F006         	call	_lcd_cmd
   535  00091C                     
   536                           ;main.c: 91:             lcd_str("Conv. A/D e LCD");
   537  00091C  0E01               	movlw	low STR_1
   538  00091E  6E05               	movwf	lcd_str@str^0,c
   539  000920  0E08               	movlw	high STR_1
   540  000922  6E06               	movwf	(lcd_str@str+1)^0,c
   541  000924  EC6E  F006         	call	_lcd_str	;wreg free
   542  000928                     
   543                           ;main.c: 92:             lcd_cmd(0xC0);
   544  000928  0EC0               	movlw	192
   545  00092A  ECED  F006         	call	_lcd_cmd
   546  00092E                     
   547                           ;main.c: 93:             lcd_str("Temp.: ");
   548  00092E  0E11               	movlw	low STR_2
   549  000930  6E05               	movwf	lcd_str@str^0,c
   550  000932  0E08               	movlw	high STR_2
   551  000934  6E06               	movwf	(lcd_str@str+1)^0,c
   552  000936  EC6E  F006         	call	_lcd_str	;wreg free
   553  00093A                     
   554                           ;main.c: 94:             lcd_dat(str[0]);
   555  00093A  501C               	movf	main@str^0,w,c
   556  00093C  ECD4  F006         	call	_lcd_dat
   557  000940                     
   558                           ;main.c: 95:             lcd_dat(str[1]);
   559  000940  501D               	movf	(main@str+1)^0,w,c
   560  000942  ECD4  F006         	call	_lcd_dat
   561  000946                     
   562                           ;main.c: 96:             lcd_dat(',');
   563  000946  0E2C               	movlw	44
   564  000948  ECD4  F006         	call	_lcd_dat
   565  00094C                     
   566                           ;main.c: 97:             lcd_dat(str[2]);
   567  00094C  501E               	movf	(main@str+2)^0,w,c
   568  00094E  ECD4  F006         	call	_lcd_dat
   569  000952                     
   570                           ;main.c: 101:             lcd_dat('C');
   571  000952  0E43               	movlw	67
   572  000954  ECD4  F006         	call	_lcd_dat
   573  000958                     l1345:
   574                           
   575                           ;main.c: 106:         if(!flag1Botao1 && !PORTBbits.RB0 && !flag2Botao1){
   576  000958  5028               	movf	_flag1Botao1^0,w,c
   577  00095A  A4D8               	btfss	status,2,c
   578  00095C  EFB2  F004         	goto	u461
   579  000960  EFB4  F004         	goto	u460
   580  000964                     u461:
   581  000964  EFC5  F004         	goto	l1353
   582  000968                     u460:
   583  000968  B081               	btfsc	129,0,c	;volatile
   584  00096A  EFB9  F004         	goto	u471
   585  00096E  EFBB  F004         	goto	u470
   586  000972                     u471:
   587  000972  EFC5  F004         	goto	l1353
   588  000976                     u470:
   589  000976  5024               	movf	main@flag2Botao1^0,w,c
   590  000978  A4D8               	btfss	status,2,c
   591  00097A  EFC1  F004         	goto	u481
   592  00097E  EFC3  F004         	goto	u480
   593  000982                     u481:
   594  000982  EFC5  F004         	goto	l1353
   595  000986                     u480:
   596  000986                     
   597                           ;main.c: 107:             flag1Botao1=1;
   598  000986  0E01               	movlw	1
   599  000988  6E28               	movwf	_flag1Botao1^0,c
   600  00098A                     l1353:
   601                           
   602                           ;main.c: 109:         if(contaDebounce >= 6){
   603  00098A  0E05               	movlw	5
   604  00098C  6429               	cpfsgt	_contaDebounce^0,c
   605  00098E  EFCB  F004         	goto	u491
   606  000992  EFCD  F004         	goto	u490
   607  000996                     u491:
   608  000996  EFDA  F004         	goto	l88
   609  00099A                     u490:
   610  00099A                     
   611                           ;main.c: 110:             if(!PORTBbits.RB0){
   612  00099A  B081               	btfsc	129,0,c	;volatile
   613  00099C  EFD2  F004         	goto	u501
   614  0009A0  EFD4  F004         	goto	u500
   615  0009A4                     u501:
   616  0009A4  EFDA  F004         	goto	l88
   617  0009A8                     u500:
   618  0009A8                     
   619                           ;main.c: 111:                 flag2Botao1 = 1;
   620  0009A8  0E01               	movlw	1
   621  0009AA  6E24               	movwf	main@flag2Botao1^0,c
   622                           
   623                           ;main.c: 113:                 flag1Botao1 = 0;
   624  0009AC  0E00               	movlw	0
   625  0009AE  6E28               	movwf	_flag1Botao1^0,c
   626                           
   627                           ;main.c: 114:                 contaDebounce = 0;
   628  0009B0  0E00               	movlw	0
   629  0009B2  6E29               	movwf	_contaDebounce^0,c
   630  0009B4                     l88:
   631                           
   632                           ;main.c: 117:         if(flag2Botao1 && PORTBbits.RB0){
   633  0009B4  5024               	movf	main@flag2Botao1^0,w,c
   634  0009B6  B4D8               	btfsc	status,2,c
   635  0009B8  EFE0  F004         	goto	u511
   636  0009BC  EFE2  F004         	goto	u510
   637  0009C0                     u511:
   638  0009C0  EFF6  F004         	goto	l90
   639  0009C4                     u510:
   640  0009C4  A081               	btfss	129,0,c	;volatile
   641  0009C6  EFE7  F004         	goto	u521
   642  0009CA  EFE9  F004         	goto	u520
   643  0009CE                     u521:
   644  0009CE  EFF6  F004         	goto	l90
   645  0009D2                     u520:
   646  0009D2                     
   647                           ;main.c: 118:             funcaoRB0++;
   648  0009D2  2A25               	incf	main@funcaoRB0^0,f,c
   649  0009D4                     
   650                           ;main.c: 119:             if(funcaoRB0>=3){
   651  0009D4  0E02               	movlw	2
   652  0009D6  6425               	cpfsgt	main@funcaoRB0^0,c
   653  0009D8  EFF0  F004         	goto	u531
   654  0009DC  EFF2  F004         	goto	u530
   655  0009E0                     u531:
   656  0009E0  EFF4  F004         	goto	l91
   657  0009E4                     u530:
   658  0009E4                     
   659                           ;main.c: 120:                 funcaoRB0 = 0;
   660  0009E4  0E00               	movlw	0
   661  0009E6  6E25               	movwf	main@funcaoRB0^0,c
   662  0009E8                     l91:
   663                           
   664                           ;main.c: 122:             flag2Botao1 = 0;
   665  0009E8  0E00               	movlw	0
   666  0009EA  6E24               	movwf	main@flag2Botao1^0,c
   667  0009EC                     l90:
   668                           
   669                           ;main.c: 124:         if(funcaoRB0 == 0){
   670  0009EC  5025               	movf	main@funcaoRB0^0,w,c
   671  0009EE  A4D8               	btfss	status,2,c
   672  0009F0  EFFC  F004         	goto	u541
   673  0009F4  EFFE  F004         	goto	u540
   674  0009F8                     u541:
   675  0009F8  EF00  F005         	goto	l1369
   676  0009FC                     u540:
   677  0009FC                     
   678                           ;main.c: 125:             PORTBbits.RB2 = 0;
   679  0009FC  9481               	bcf	129,2,c	;volatile
   680                           
   681                           ;main.c: 126:             PORTCbits.RC2 = 0;
   682  0009FE  9482               	bcf	130,2,c	;volatile
   683  000A00                     l1369:
   684                           
   685                           ;main.c: 128:         if(funcaoRB0 == 1){
   686  000A00  0425               	decf	main@funcaoRB0^0,w,c
   687  000A02  A4D8               	btfss	status,2,c
   688  000A04  EF06  F005         	goto	u551
   689  000A08  EF08  F005         	goto	u550
   690  000A0C                     u551:
   691  000A0C  EF12  F005         	goto	l1373
   692  000A10                     u550:
   693  000A10                     
   694                           ;main.c: 129:             PORTBbits.RB2 = PORTBbits.RB3;
   695  000A10  A681               	btfss	129,3,c	;volatile
   696  000A12  D002               	bra	u565
   697  000A14  8481               	bsf	129,2,c	;volatile
   698  000A16  D001               	bra	u567
   699  000A18                     u565:
   700  000A18  9481               	bcf	129,2,c	;volatile
   701  000A1A                     u567:
   702                           
   703                           ;main.c: 130:             PORTCbits.RC2 = PORTBbits.RB3;
   704  000A1A  A681               	btfss	129,3,c	;volatile
   705  000A1C  D002               	bra	u575
   706  000A1E  8482               	bsf	130,2,c	;volatile
   707  000A20  D001               	bra	u577
   708  000A22                     u575:
   709  000A22  9482               	bcf	130,2,c	;volatile
   710  000A24                     u577:
   711  000A24                     l1373:
   712                           
   713                           ;main.c: 132:         if(funcaoRB0 == 2){
   714  000A24  0E02               	movlw	2
   715  000A26  1825               	xorwf	main@funcaoRB0^0,w,c
   716  000A28  A4D8               	btfss	status,2,c
   717  000A2A  EF19  F005         	goto	u581
   718  000A2E  EF1B  F005         	goto	u580
   719  000A32                     u581:
   720  000A32  EF3F  F004         	goto	l1317
   721  000A36                     u580:
   722  000A36                     
   723                           ;main.c: 133:             PORTBbits.RB2 = 1;
   724  000A36  8481               	bsf	129,2,c	;volatile
   725                           
   726                           ;main.c: 134:             PORTCbits.RC2 = 1;
   727  000A38  8482               	bsf	130,2,c	;volatile
   728  000A3A  EF3F  F004         	goto	l1317
   729  000A3E  EF15  F000         	goto	start
   730  000A42                     __end_of_main:
   731                           	callstack 0
   732                           
   733 ;; *************** function _lcd_str *****************
   734 ;; Defined at:
   735 ;;		line 77 in file "lcd.c"
   736 ;; Parameters:    Size  Location     Type
   737 ;;  str             2    4[COMRAM] PTR const unsigned char 
   738 ;;		 -> STR_2(8), STR_1(16), 
   739 ;; Auto vars:     Size  Location     Type
   740 ;;  i               1    8[COMRAM] unsigned char 
   741 ;; Return value:  Size  Location     Type
   742 ;;                  1    wreg      void 
   743 ;; Registers used:
   744 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
   745 ;; Tracked objects:
   746 ;;		On entry : 0/0
   747 ;;		On exit  : 0/0
   748 ;;		Unchanged: 0/0
   749 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   750 ;;      Params:         2       0       0       0       0       0       0       0       0
   751 ;;      Locals:         1       0       0       0       0       0       0       0       0
   752 ;;      Temps:          2       0       0       0       0       0       0       0       0
   753 ;;      Totals:         5       0       0       0       0       0       0       0       0
   754 ;;Total ram usage:        5 bytes
   755 ;; Hardware stack levels used:    1
   756 ;; Hardware stack levels required when called:    4
   757 ;; This function calls:
   758 ;;		_lcd_dat
   759 ;; This function is called by:
   760 ;;		_main
   761 ;; This function uses a non-reentrant model
   762 ;;
   763                           
   764                           	psect	text1
   765  000CDC                     __ptext1:
   766                           	callstack 0
   767  000CDC                     _lcd_str:
   768                           	callstack 26
   769  000CDC                     
   770                           ;lcd.c: 77: void lcd_str(const char* str);lcd.c: 78: {;lcd.c: 79:  unsigned char i=0;
   771  000CDC  0E00               	movlw	0
   772  000CDE  6E09               	movwf	lcd_str@i^0,c
   773                           
   774                           ;lcd.c: 81:  while(str[i] != 0 )
   775  000CE0  EF81  F006         	goto	l1251
   776  000CE4                     l1247:
   777                           
   778                           ;lcd.c: 82:  {;lcd.c: 83:    lcd_dat(str[i]);
   779  000CE4  5009               	movf	lcd_str@i^0,w,c
   780  000CE6  2405               	addwf	lcd_str@str^0,w,c
   781  000CE8  6E07               	movwf	??_lcd_str^0,c
   782  000CEA  0E00               	movlw	0
   783  000CEC  2006               	addwfc	(lcd_str@str+1)^0,w,c
   784  000CEE  6E08               	movwf	(??_lcd_str+1)^0,c
   785  000CF0  C007  FFF6         	movff	??_lcd_str,tblptrl
   786  000CF4  C008  FFF7         	movff	??_lcd_str+1,tblptrh
   787  000CF8                     	if	0	;tblptru may be non-zero
   788  000CF8                     	endif
   789  000CF8                     	if	0	;tblptru may be non-zero
   790  000CF8                     	endif
   791  000CF8  0008               	tblrd		*
   792  000CFA  50F5               	movf	tablat,w,c
   793  000CFC  ECD4  F006         	call	_lcd_dat
   794  000D00                     
   795                           ;lcd.c: 84:    i++;
   796  000D00  2A09               	incf	lcd_str@i^0,f,c
   797  000D02                     l1251:
   798                           
   799                           ;lcd.c: 81:  while(str[i] != 0 )
   800  000D02  5009               	movf	lcd_str@i^0,w,c
   801  000D04  2405               	addwf	lcd_str@str^0,w,c
   802  000D06  6E07               	movwf	??_lcd_str^0,c
   803  000D08  0E00               	movlw	0
   804  000D0A  2006               	addwfc	(lcd_str@str+1)^0,w,c
   805  000D0C  6E08               	movwf	(??_lcd_str+1)^0,c
   806  000D0E  C007  FFF6         	movff	??_lcd_str,tblptrl
   807  000D12  C008  FFF7         	movff	??_lcd_str+1,tblptrh
   808  000D16                     	if	0	;tblptru may be non-zero
   809  000D16                     	endif
   810  000D16                     	if	0	;tblptru may be non-zero
   811  000D16                     	endif
   812  000D16  0008               	tblrd		*
   813  000D18  50F5               	movf	tablat,w,c
   814  000D1A  0900               	iorlw	0
   815  000D1C  A4D8               	btfss	status,2,c
   816  000D1E  EF93  F006         	goto	u401
   817  000D22  EF95  F006         	goto	u400
   818  000D26                     u401:
   819  000D26  EF72  F006         	goto	l1247
   820  000D2A                     u400:
   821  000D2A  0012               	return		;funcret
   822  000D2C                     __end_of_lcd_str:
   823                           	callstack 0
   824                           
   825 ;; *************** function _lcd_dat *****************
   826 ;; Defined at:
   827 ;;		line 47 in file "lcd.c"
   828 ;; Parameters:    Size  Location     Type
   829 ;;  val             1    wreg     unsigned char 
   830 ;; Auto vars:     Size  Location     Type
   831 ;;  val             1    3[COMRAM] unsigned char 
   832 ;; Return value:  Size  Location     Type
   833 ;;                  1    wreg      void 
   834 ;; Registers used:
   835 ;;		wreg, status,2, cstack
   836 ;; Tracked objects:
   837 ;;		On entry : 0/0
   838 ;;		On exit  : 0/0
   839 ;;		Unchanged: 0/0
   840 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   841 ;;      Params:         0       0       0       0       0       0       0       0       0
   842 ;;      Locals:         1       0       0       0       0       0       0       0       0
   843 ;;      Temps:          1       0       0       0       0       0       0       0       0
   844 ;;      Totals:         2       0       0       0       0       0       0       0       0
   845 ;;Total ram usage:        2 bytes
   846 ;; Hardware stack levels used:    1
   847 ;; Hardware stack levels required when called:    3
   848 ;; This function calls:
   849 ;;		_lcd_wr
   850 ;; This function is called by:
   851 ;;		_lcd_str
   852 ;;		_main
   853 ;; This function uses a non-reentrant model
   854 ;;
   855                           
   856                           	psect	text2
   857  000DA8                     __ptext2:
   858                           	callstack 0
   859  000DA8                     _lcd_dat:
   860                           	callstack 26
   861                           
   862                           ;incstack = 0
   863                           ;lcd_dat@val stored from wreg
   864  000DA8  6E04               	movwf	lcd_dat@val^0,c
   865  000DAA                     
   866                           ;lcd.c: 47: void lcd_dat(unsigned char val);lcd.c: 48: {;lcd.c: 49:  PORTEbits.RE1=1;
   867  000DAA  8284               	bsf	132,1,c	;volatile
   868  000DAC                     
   869                           ;lcd.c: 50:         lcd_wr(val);
   870  000DAC  5004               	movf	lcd_dat@val^0,w,c
   871  000DAE  EC36  F007         	call	_lcd_wr
   872  000DB2                     
   873                           ;lcd.c: 51:         PORTEbits.RE0=1;
   874  000DB2  8084               	bsf	132,0,c	;volatile
   875  000DB4                     
   876                           ;lcd.c: 52:         _delay((unsigned long)((3)*(16000000/4000.0)));
   877  000DB4  0E10               	movlw	16
   878  000DB6  6E03               	movwf	??_lcd_dat^0,c
   879  000DB8  0E94               	movlw	148
   880  000DBA                     u597:
   881  000DBA  2EE8               	decfsz	wreg,f,c
   882  000DBC  D7FE               	bra	u597
   883  000DBE  2E03               	decfsz	??_lcd_dat^0,f,c
   884  000DC0  D7FC               	bra	u597
   885  000DC2  D000               	nop2	
   886  000DC4                     
   887                           ;lcd.c: 53:         PORTEbits.RE1=0;
   888  000DC4  9284               	bcf	132,1,c	;volatile
   889  000DC6                     
   890                           ;lcd.c: 54:         _delay((unsigned long)((3)*(16000000/4000.0)));
   891  000DC6  0E10               	movlw	16
   892  000DC8  6E03               	movwf	??_lcd_dat^0,c
   893  000DCA  0E94               	movlw	148
   894  000DCC                     u607:
   895  000DCC  2EE8               	decfsz	wreg,f,c
   896  000DCE  D7FE               	bra	u607
   897  000DD0  2E03               	decfsz	??_lcd_dat^0,f,c
   898  000DD2  D7FC               	bra	u607
   899  000DD4  D000               	nop2	
   900  000DD6                     
   901                           ;lcd.c: 55:  PORTEbits.RE1=1;
   902  000DD6  8284               	bsf	132,1,c	;volatile
   903  000DD8  0012               	return		;funcret
   904  000DDA                     __end_of_lcd_dat:
   905                           	callstack 0
   906                           
   907 ;; *************** function _lcd_init *****************
   908 ;; Defined at:
   909 ;;		line 58 in file "lcd.c"
   910 ;; Parameters:    Size  Location     Type
   911 ;;		None
   912 ;; Auto vars:     Size  Location     Type
   913 ;;		None
   914 ;; Return value:  Size  Location     Type
   915 ;;                  1    wreg      void 
   916 ;; Registers used:
   917 ;;		wreg, status,2, cstack
   918 ;; Tracked objects:
   919 ;;		On entry : 0/0
   920 ;;		On exit  : 0/0
   921 ;;		Unchanged: 0/0
   922 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   923 ;;      Params:         0       0       0       0       0       0       0       0       0
   924 ;;      Locals:         0       0       0       0       0       0       0       0       0
   925 ;;      Temps:          1       0       0       0       0       0       0       0       0
   926 ;;      Totals:         1       0       0       0       0       0       0       0       0
   927 ;;Total ram usage:        1 bytes
   928 ;; Hardware stack levels used:    1
   929 ;; Hardware stack levels required when called:    4
   930 ;; This function calls:
   931 ;;		_lcd_cmd
   932 ;; This function is called by:
   933 ;;		_main
   934 ;; This function uses a non-reentrant model
   935 ;;
   936                           
   937                           	psect	text3
   938  000C10                     __ptext3:
   939                           	callstack 0
   940  000C10                     _lcd_init:
   941                           	callstack 26
   942  000C10                     
   943                           ;lcd.c: 60:  PORTEbits.RE1=0;
   944  000C10  9284               	bcf	132,1,c	;volatile
   945                           
   946                           ;lcd.c: 61:  PORTEbits.RE0=0;
   947  000C12  9084               	bcf	132,0,c	;volatile
   948  000C14                     
   949                           ;lcd.c: 62:  _delay((unsigned long)((20)*(16000000/4000.0)));
   950  000C14  0E68               	movlw	104
   951  000C16  6E05               	movwf	??_lcd_init^0,c
   952  000C18  0EE4               	movlw	228
   953  000C1A                     u617:
   954  000C1A  2EE8               	decfsz	wreg,f,c
   955  000C1C  D7FE               	bra	u617
   956  000C1E  2E05               	decfsz	??_lcd_init^0,f,c
   957  000C20  D7FC               	bra	u617
   958  000C22  D000               	nop2	
   959  000C24                     
   960                           ;lcd.c: 63:  PORTEbits.RE1=1;
   961  000C24  8284               	bsf	132,1,c	;volatile
   962  000C26                     
   963                           ;lcd.c: 65:  lcd_cmd(0x38);
   964  000C26  0E38               	movlw	56
   965  000C28  ECED  F006         	call	_lcd_cmd
   966  000C2C                     
   967                           ;lcd.c: 66:  _delay((unsigned long)((5)*(16000000/4000.0)));
   968  000C2C  0E1A               	movlw	26
   969  000C2E  6E05               	movwf	??_lcd_init^0,c
   970  000C30  0EF8               	movlw	248
   971  000C32                     u627:
   972  000C32  2EE8               	decfsz	wreg,f,c
   973  000C34  D7FE               	bra	u627
   974  000C36  2E05               	decfsz	??_lcd_init^0,f,c
   975  000C38  D7FC               	bra	u627
   976  000C3A  D000               	nop2	
   977                           
   978                           ;lcd.c: 67:  lcd_cmd(0x38);
   979  000C3C  0E38               	movlw	56
   980  000C3E  ECED  F006         	call	_lcd_cmd
   981  000C42                     
   982                           ;lcd.c: 68:     _delay((unsigned long)((1)*(16000000/4000.0)));
   983  000C42  0E06               	movlw	6
   984  000C44  6E05               	movwf	??_lcd_init^0,c
   985  000C46  0E30               	movlw	48
   986  000C48                     u637:
   987  000C48  2EE8               	decfsz	wreg,f,c
   988  000C4A  D7FE               	bra	u637
   989  000C4C  2E05               	decfsz	??_lcd_init^0,f,c
   990  000C4E  D7FC               	bra	u637
   991  000C50  D000               	nop2	
   992  000C52                     
   993                           ;lcd.c: 69:  lcd_cmd(0x38);
   994  000C52  0E38               	movlw	56
   995  000C54  ECED  F006         	call	_lcd_cmd
   996  000C58                     
   997                           ;lcd.c: 70:  lcd_cmd(0x08);
   998  000C58  0E08               	movlw	8
   999  000C5A  ECED  F006         	call	_lcd_cmd
  1000  000C5E                     
  1001                           ;lcd.c: 71:  lcd_cmd(0x0F);
  1002  000C5E  0E0F               	movlw	15
  1003  000C60  ECED  F006         	call	_lcd_cmd
  1004  000C64                     
  1005                           ;lcd.c: 72:  lcd_cmd(0x01);
  1006  000C64  0E01               	movlw	1
  1007  000C66  ECED  F006         	call	_lcd_cmd
  1008  000C6A                     
  1009                           ;lcd.c: 73:  lcd_cmd(0x38);
  1010  000C6A  0E38               	movlw	56
  1011  000C6C  ECED  F006         	call	_lcd_cmd
  1012  000C70                     
  1013                           ;lcd.c: 74:     lcd_cmd(0x80);
  1014  000C70  0E80               	movlw	128
  1015  000C72  ECED  F006         	call	_lcd_cmd
  1016  000C76  0012               	return		;funcret
  1017  000C78                     __end_of_lcd_init:
  1018                           	callstack 0
  1019                           
  1020 ;; *************** function _lcd_cmd *****************
  1021 ;; Defined at:
  1022 ;;		line 36 in file "lcd.c"
  1023 ;; Parameters:    Size  Location     Type
  1024 ;;  val             1    wreg     unsigned char 
  1025 ;; Auto vars:     Size  Location     Type
  1026 ;;  val             1    3[COMRAM] unsigned char 
  1027 ;; Return value:  Size  Location     Type
  1028 ;;                  1    wreg      void 
  1029 ;; Registers used:
  1030 ;;		wreg, status,2, cstack
  1031 ;; Tracked objects:
  1032 ;;		On entry : 0/0
  1033 ;;		On exit  : 0/0
  1034 ;;		Unchanged: 0/0
  1035 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1036 ;;      Params:         0       0       0       0       0       0       0       0       0
  1037 ;;      Locals:         1       0       0       0       0       0       0       0       0
  1038 ;;      Temps:          1       0       0       0       0       0       0       0       0
  1039 ;;      Totals:         2       0       0       0       0       0       0       0       0
  1040 ;;Total ram usage:        2 bytes
  1041 ;; Hardware stack levels used:    1
  1042 ;; Hardware stack levels required when called:    3
  1043 ;; This function calls:
  1044 ;;		_lcd_wr
  1045 ;; This function is called by:
  1046 ;;		_lcd_init
  1047 ;;		_main
  1048 ;; This function uses a non-reentrant model
  1049 ;;
  1050                           
  1051                           	psect	text4
  1052  000DDA                     __ptext4:
  1053                           	callstack 0
  1054  000DDA                     _lcd_cmd:
  1055                           	callstack 26
  1056                           
  1057                           ;incstack = 0
  1058                           ;lcd_cmd@val stored from wreg
  1059  000DDA  6E04               	movwf	lcd_cmd@val^0,c
  1060  000DDC                     
  1061                           ;lcd.c: 36: void lcd_cmd(unsigned char val);lcd.c: 37: {;lcd.c: 38:  PORTEbits.RE1=1;
  1062  000DDC  8284               	bsf	132,1,c	;volatile
  1063  000DDE                     
  1064                           ;lcd.c: 39:         lcd_wr(val);
  1065  000DDE  5004               	movf	lcd_cmd@val^0,w,c
  1066  000DE0  EC36  F007         	call	_lcd_wr
  1067  000DE4                     
  1068                           ;lcd.c: 40:         PORTEbits.RE0=0;
  1069  000DE4  9084               	bcf	132,0,c	;volatile
  1070  000DE6                     
  1071                           ;lcd.c: 41:         _delay((unsigned long)((3)*(16000000/4000.0)));
  1072  000DE6  0E10               	movlw	16
  1073  000DE8  6E03               	movwf	??_lcd_cmd^0,c
  1074  000DEA  0E94               	movlw	148
  1075  000DEC                     u647:
  1076  000DEC  2EE8               	decfsz	wreg,f,c
  1077  000DEE  D7FE               	bra	u647
  1078  000DF0  2E03               	decfsz	??_lcd_cmd^0,f,c
  1079  000DF2  D7FC               	bra	u647
  1080  000DF4  D000               	nop2	
  1081  000DF6                     
  1082                           ;lcd.c: 42:         PORTEbits.RE1=0;
  1083  000DF6  9284               	bcf	132,1,c	;volatile
  1084  000DF8                     
  1085                           ;lcd.c: 43:         _delay((unsigned long)((3)*(16000000/4000.0)));
  1086  000DF8  0E10               	movlw	16
  1087  000DFA  6E03               	movwf	??_lcd_cmd^0,c
  1088  000DFC  0E94               	movlw	148
  1089  000DFE                     u657:
  1090  000DFE  2EE8               	decfsz	wreg,f,c
  1091  000E00  D7FE               	bra	u657
  1092  000E02  2E03               	decfsz	??_lcd_cmd^0,f,c
  1093  000E04  D7FC               	bra	u657
  1094  000E06  D000               	nop2	
  1095  000E08                     
  1096                           ;lcd.c: 44:  PORTEbits.RE1=1;
  1097  000E08  8284               	bsf	132,1,c	;volatile
  1098  000E0A  0012               	return		;funcret
  1099  000E0C                     __end_of_lcd_cmd:
  1100                           	callstack 0
  1101                           
  1102 ;; *************** function _lcd_wr *****************
  1103 ;; Defined at:
  1104 ;;		line 31 in file "lcd.c"
  1105 ;; Parameters:    Size  Location     Type
  1106 ;;  val             1    wreg     unsigned char 
  1107 ;; Auto vars:     Size  Location     Type
  1108 ;;  val             1    1[COMRAM] unsigned char 
  1109 ;; Return value:  Size  Location     Type
  1110 ;;                  1    wreg      void 
  1111 ;; Registers used:
  1112 ;;		wreg
  1113 ;; Tracked objects:
  1114 ;;		On entry : 0/0
  1115 ;;		On exit  : 0/0
  1116 ;;		Unchanged: 0/0
  1117 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1118 ;;      Params:         0       0       0       0       0       0       0       0       0
  1119 ;;      Locals:         1       0       0       0       0       0       0       0       0
  1120 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1121 ;;      Totals:         1       0       0       0       0       0       0       0       0
  1122 ;;Total ram usage:        1 bytes
  1123 ;; Hardware stack levels used:    1
  1124 ;; Hardware stack levels required when called:    2
  1125 ;; This function calls:
  1126 ;;		Nothing
  1127 ;; This function is called by:
  1128 ;;		_lcd_cmd
  1129 ;;		_lcd_dat
  1130 ;; This function uses a non-reentrant model
  1131 ;;
  1132                           
  1133                           	psect	text5
  1134  000E6C                     __ptext5:
  1135                           	callstack 0
  1136  000E6C                     _lcd_wr:
  1137                           	callstack 26
  1138                           
  1139                           ;incstack = 0
  1140                           ;lcd_wr@val stored from wreg
  1141  000E6C  6E02               	movwf	lcd_wr@val^0,c
  1142  000E6E                     
  1143                           ;lcd.c: 31: void lcd_wr(unsigned char val);lcd.c: 32: {;lcd.c: 33:   PORTD=val;
  1144  000E6E  C002  FF83         	movff	lcd_wr@val,3971	;volatile
  1145  000E72  0012               	return		;funcret
  1146  000E74                     __end_of_lcd_wr:
  1147                           	callstack 0
  1148                           
  1149 ;; *************** function _itoa *****************
  1150 ;; Defined at:
  1151 ;;		line 4 in file "D:\Arquivos de Programas\Microchip\xc8\pic\sources\c90\common\itoa.c"
  1152 ;; Parameters:    Size  Location     Type
  1153 ;;  buf             2   17[COMRAM] PTR unsigned char 
  1154 ;;		 -> main@str(6), 
  1155 ;;  val             2   19[COMRAM] int 
  1156 ;;  base            2   21[COMRAM] int 
  1157 ;; Auto vars:     Size  Location     Type
  1158 ;;  cp              2    0        PTR unsigned char 
  1159 ;;		 -> main@str(6), 
  1160 ;; Return value:  Size  Location     Type
  1161 ;;                  2   17[COMRAM] PTR unsigned char 
  1162 ;; Registers used:
  1163 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  1164 ;; Tracked objects:
  1165 ;;		On entry : 0/0
  1166 ;;		On exit  : 0/0
  1167 ;;		Unchanged: 0/0
  1168 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1169 ;;      Params:         6       0       0       0       0       0       0       0       0
  1170 ;;      Locals:         2       0       0       0       0       0       0       0       0
  1171 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1172 ;;      Totals:         8       0       0       0       0       0       0       0       0
  1173 ;;Total ram usage:        8 bytes
  1174 ;; Hardware stack levels used:    1
  1175 ;; Hardware stack levels required when called:    4
  1176 ;; This function calls:
  1177 ;;		_utoa
  1178 ;; This function is called by:
  1179 ;;		_main
  1180 ;; This function uses a non-reentrant model
  1181 ;;
  1182                           
  1183                           	psect	text6
  1184  000D2C                     __ptext6:
  1185                           	callstack 0
  1186  000D2C                     _itoa:
  1187                           	callstack 26
  1188  000D2C  BE15               	btfsc	(itoa@val+1)^0,7,c
  1189  000D2E  EF9D  F006         	goto	u430
  1190  000D32  EF9B  F006         	goto	u431
  1191  000D36                     u431:
  1192  000D36  EFA9  F006         	goto	l1281
  1193  000D3A                     u430:
  1194  000D3A  C012  FFD9         	movff	itoa@buf,fsr2l
  1195  000D3E  C013  FFDA         	movff	itoa@buf+1,fsr2h
  1196  000D42  0E2D               	movlw	45
  1197  000D44  6EDF               	movwf	indf2,c
  1198  000D46  4A12               	infsnz	itoa@buf^0,f,c
  1199  000D48  2A13               	incf	(itoa@buf+1)^0,f,c
  1200  000D4A  6C14               	negf	itoa@val^0,c
  1201  000D4C  1E15               	comf	(itoa@val+1)^0,f,c
  1202  000D4E  B0D8               	btfsc	status,0,c
  1203  000D50  2A15               	incf	(itoa@val+1)^0,f,c
  1204  000D52                     l1281:
  1205  000D52  C012  F009         	movff	itoa@buf,utoa@buf
  1206  000D56  C013  F00A         	movff	itoa@buf+1,utoa@buf+1
  1207  000D5A  C014  F00B         	movff	itoa@val,utoa@val
  1208  000D5E  C015  F00C         	movff	itoa@val+1,utoa@val+1
  1209  000D62  C016  F00D         	movff	itoa@base,utoa@base
  1210  000D66  C017  F00E         	movff	itoa@base+1,utoa@base+1
  1211  000D6A  EC21  F005         	call	_utoa	;wreg free
  1212  000D6E  0012               	return		;funcret
  1213  000D70                     __end_of_itoa:
  1214                           	callstack 0
  1215                           
  1216 ;; *************** function _utoa *****************
  1217 ;; Defined at:
  1218 ;;		line 17 in file "D:\Arquivos de Programas\Microchip\xc8\pic\sources\c90\common\itoa.c"
  1219 ;; Parameters:    Size  Location     Type
  1220 ;;  buf             2    8[COMRAM] PTR unsigned char 
  1221 ;;		 -> main@str(6), 
  1222 ;;  val             2   10[COMRAM] unsigned int 
  1223 ;;  base            2   12[COMRAM] int 
  1224 ;; Auto vars:     Size  Location     Type
  1225 ;;  v               2   14[COMRAM] unsigned int 
  1226 ;;  c               1   16[COMRAM] unsigned char 
  1227 ;; Return value:  Size  Location     Type
  1228 ;;                  2    8[COMRAM] PTR unsigned char 
  1229 ;; Registers used:
  1230 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  1231 ;; Tracked objects:
  1232 ;;		On entry : 0/0
  1233 ;;		On exit  : 0/0
  1234 ;;		Unchanged: 0/0
  1235 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1236 ;;      Params:         6       0       0       0       0       0       0       0       0
  1237 ;;      Locals:         3       0       0       0       0       0       0       0       0
  1238 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1239 ;;      Totals:         9       0       0       0       0       0       0       0       0
  1240 ;;Total ram usage:        9 bytes
  1241 ;; Hardware stack levels used:    1
  1242 ;; Hardware stack levels required when called:    3
  1243 ;; This function calls:
  1244 ;;		___lwdiv
  1245 ;;		___lwmod
  1246 ;; This function is called by:
  1247 ;;		_itoa
  1248 ;; This function uses a non-reentrant model
  1249 ;;
  1250                           
  1251                           	psect	text7
  1252  000A42                     __ptext7:
  1253                           	callstack 0
  1254  000A42                     _utoa:
  1255                           	callstack 26
  1256  000A42  C00B  F00F         	movff	utoa@val,utoa@v
  1257  000A46  C00C  F010         	movff	utoa@val+1,utoa@v+1
  1258  000A4A                     l1217:
  1259  000A4A  C00F  F002         	movff	utoa@v,___lwdiv@dividend
  1260  000A4E  C010  F003         	movff	utoa@v+1,___lwdiv@dividend+1
  1261  000A52  C00D  F004         	movff	utoa@base,___lwdiv@divisor
  1262  000A56  C00E  F005         	movff	utoa@base+1,___lwdiv@divisor+1
  1263  000A5A  ECCE  F005         	call	___lwdiv	;wreg free
  1264  000A5E  C002  F00F         	movff	?___lwdiv,utoa@v
  1265  000A62  C003  F010         	movff	?___lwdiv+1,utoa@v+1
  1266  000A66  4A09               	infsnz	utoa@buf^0,f,c
  1267  000A68  2A0A               	incf	(utoa@buf+1)^0,f,c
  1268  000A6A  500F               	movf	utoa@v^0,w,c
  1269  000A6C  1010               	iorwf	(utoa@v+1)^0,w,c
  1270  000A6E  A4D8               	btfss	status,2,c
  1271  000A70  EF3C  F005         	goto	u371
  1272  000A74  EF3E  F005         	goto	u370
  1273  000A78                     u371:
  1274  000A78  EF25  F005         	goto	l1217
  1275  000A7C                     u370:
  1276  000A7C  C009  FFD9         	movff	utoa@buf,fsr2l
  1277  000A80  C00A  FFDA         	movff	utoa@buf+1,fsr2h
  1278  000A84  0E00               	movlw	0
  1279  000A86  6EDF               	movwf	indf2,c
  1280  000A88  0609               	decf	utoa@buf^0,f,c
  1281  000A8A  A0D8               	btfss	status,0,c
  1282  000A8C  060A               	decf	(utoa@buf+1)^0,f,c
  1283  000A8E                     l1227:
  1284  000A8E  C00B  F002         	movff	utoa@val,___lwmod@dividend
  1285  000A92  C00C  F003         	movff	utoa@val+1,___lwmod@dividend+1
  1286  000A96  C00D  F004         	movff	utoa@base,___lwmod@divisor
  1287  000A9A  C00E  F005         	movff	utoa@base+1,___lwmod@divisor+1
  1288  000A9E  EC3C  F006         	call	___lwmod	;wreg free
  1289  000AA2  5002               	movf	?___lwmod^0,w,c
  1290  000AA4  6E11               	movwf	utoa@c^0,c
  1291  000AA6  C00B  F002         	movff	utoa@val,___lwdiv@dividend
  1292  000AAA  C00C  F003         	movff	utoa@val+1,___lwdiv@dividend+1
  1293  000AAE  C00D  F004         	movff	utoa@base,___lwdiv@divisor
  1294  000AB2  C00E  F005         	movff	utoa@base+1,___lwdiv@divisor+1
  1295  000AB6  ECCE  F005         	call	___lwdiv	;wreg free
  1296  000ABA  C002  F00B         	movff	?___lwdiv,utoa@val
  1297  000ABE  C003  F00C         	movff	?___lwdiv+1,utoa@val+1
  1298  000AC2  0E09               	movlw	9
  1299  000AC4  6411               	cpfsgt	utoa@c^0,c
  1300  000AC6  EF67  F005         	goto	u381
  1301  000ACA  EF69  F005         	goto	u380
  1302  000ACE                     u381:
  1303  000ACE  EF6B  F005         	goto	l809
  1304  000AD2                     u380:
  1305  000AD2  0E07               	movlw	7
  1306  000AD4  2611               	addwf	utoa@c^0,f,c
  1307  000AD6                     l809:
  1308  000AD6  0E30               	movlw	48
  1309  000AD8  2611               	addwf	utoa@c^0,f,c
  1310  000ADA  C009  FFD9         	movff	utoa@buf,fsr2l
  1311  000ADE  C00A  FFDA         	movff	utoa@buf+1,fsr2h
  1312  000AE2  C011  FFDF         	movff	utoa@c,indf2
  1313  000AE6  0609               	decf	utoa@buf^0,f,c
  1314  000AE8  A0D8               	btfss	status,0,c
  1315  000AEA  060A               	decf	(utoa@buf+1)^0,f,c
  1316  000AEC  500B               	movf	utoa@val^0,w,c
  1317  000AEE  100C               	iorwf	(utoa@val+1)^0,w,c
  1318  000AF0  A4D8               	btfss	status,2,c
  1319  000AF2  EF7D  F005         	goto	u391
  1320  000AF6  EF7F  F005         	goto	u390
  1321  000AFA                     u391:
  1322  000AFA  EF47  F005         	goto	l1227
  1323  000AFE                     u390:
  1324  000AFE                     
  1325                           ;	Return value of _utoa is never used
  1326  000AFE  4A09               	infsnz	utoa@buf^0,f,c
  1327  000B00  2A0A               	incf	(utoa@buf+1)^0,f,c
  1328  000B02  0012               	return		;funcret
  1329  000B04                     __end_of_utoa:
  1330                           	callstack 0
  1331                           
  1332 ;; *************** function ___lwmod *****************
  1333 ;; Defined at:
  1334 ;;		line 7 in file "D:\Arquivos de Programas\Microchip\xc8\pic\sources\c90\common\lwmod.c"
  1335 ;; Parameters:    Size  Location     Type
  1336 ;;  dividend        2    1[COMRAM] unsigned int 
  1337 ;;  divisor         2    3[COMRAM] unsigned int 
  1338 ;; Auto vars:     Size  Location     Type
  1339 ;;  counter         1    5[COMRAM] unsigned char 
  1340 ;; Return value:  Size  Location     Type
  1341 ;;                  2    1[COMRAM] unsigned int 
  1342 ;; Registers used:
  1343 ;;		wreg, status,2, status,0
  1344 ;; Tracked objects:
  1345 ;;		On entry : 0/0
  1346 ;;		On exit  : 0/0
  1347 ;;		Unchanged: 0/0
  1348 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1349 ;;      Params:         4       0       0       0       0       0       0       0       0
  1350 ;;      Locals:         1       0       0       0       0       0       0       0       0
  1351 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1352 ;;      Totals:         5       0       0       0       0       0       0       0       0
  1353 ;;Total ram usage:        5 bytes
  1354 ;; Hardware stack levels used:    1
  1355 ;; Hardware stack levels required when called:    2
  1356 ;; This function calls:
  1357 ;;		Nothing
  1358 ;; This function is called by:
  1359 ;;		_utoa
  1360 ;; This function uses a non-reentrant model
  1361 ;;
  1362                           
  1363                           	psect	text8
  1364  000C78                     __ptext8:
  1365                           	callstack 0
  1366  000C78                     ___lwmod:
  1367                           	callstack 26
  1368  000C78  5004               	movf	___lwmod@divisor^0,w,c
  1369  000C7A  1005               	iorwf	(___lwmod@divisor+1)^0,w,c
  1370  000C7C  B4D8               	btfsc	status,2,c
  1371  000C7E  EF43  F006         	goto	u341
  1372  000C82  EF45  F006         	goto	u340
  1373  000C86                     u341:
  1374  000C86  EF69  F006         	goto	l627
  1375  000C8A                     u340:
  1376  000C8A  0E01               	movlw	1
  1377  000C8C  6E06               	movwf	___lwmod@counter^0,c
  1378  000C8E  EF4D  F006         	goto	l1205
  1379  000C92                     l1203:
  1380  000C92  90D8               	bcf	status,0,c
  1381  000C94  3604               	rlcf	___lwmod@divisor^0,f,c
  1382  000C96  3605               	rlcf	(___lwmod@divisor+1)^0,f,c
  1383  000C98  2A06               	incf	___lwmod@counter^0,f,c
  1384  000C9A                     l1205:
  1385  000C9A  AE05               	btfss	(___lwmod@divisor+1)^0,7,c
  1386  000C9C  EF52  F006         	goto	u351
  1387  000CA0  EF54  F006         	goto	u350
  1388  000CA4                     u351:
  1389  000CA4  EF49  F006         	goto	l1203
  1390  000CA8                     u350:
  1391  000CA8                     l1207:
  1392  000CA8  5004               	movf	___lwmod@divisor^0,w,c
  1393  000CAA  5C02               	subwf	___lwmod@dividend^0,w,c
  1394  000CAC  5005               	movf	(___lwmod@divisor+1)^0,w,c
  1395  000CAE  5803               	subwfb	(___lwmod@dividend+1)^0,w,c
  1396  000CB0  A0D8               	btfss	status,0,c
  1397  000CB2  EF5D  F006         	goto	u361
  1398  000CB6  EF5F  F006         	goto	u360
  1399  000CBA                     u361:
  1400  000CBA  EF63  F006         	goto	l1211
  1401  000CBE                     u360:
  1402  000CBE  5004               	movf	___lwmod@divisor^0,w,c
  1403  000CC0  5E02               	subwf	___lwmod@dividend^0,f,c
  1404  000CC2  5005               	movf	(___lwmod@divisor+1)^0,w,c
  1405  000CC4  5A03               	subwfb	(___lwmod@dividend+1)^0,f,c
  1406  000CC6                     l1211:
  1407  000CC6  90D8               	bcf	status,0,c
  1408  000CC8  3205               	rrcf	(___lwmod@divisor+1)^0,f,c
  1409  000CCA  3204               	rrcf	___lwmod@divisor^0,f,c
  1410  000CCC  2E06               	decfsz	___lwmod@counter^0,f,c
  1411  000CCE  EF54  F006         	goto	l1207
  1412  000CD2                     l627:
  1413  000CD2  C002  F002         	movff	___lwmod@dividend,?___lwmod
  1414  000CD6  C003  F003         	movff	___lwmod@dividend+1,?___lwmod+1
  1415  000CDA  0012               	return		;funcret
  1416  000CDC                     __end_of___lwmod:
  1417                           	callstack 0
  1418                           
  1419 ;; *************** function ___lwdiv *****************
  1420 ;; Defined at:
  1421 ;;		line 7 in file "D:\Arquivos de Programas\Microchip\xc8\pic\sources\c90\common\lwdiv.c"
  1422 ;; Parameters:    Size  Location     Type
  1423 ;;  dividend        2    1[COMRAM] unsigned int 
  1424 ;;  divisor         2    3[COMRAM] unsigned int 
  1425 ;; Auto vars:     Size  Location     Type
  1426 ;;  quotient        2    5[COMRAM] unsigned int 
  1427 ;;  counter         1    7[COMRAM] unsigned char 
  1428 ;; Return value:  Size  Location     Type
  1429 ;;                  2    1[COMRAM] unsigned int 
  1430 ;; Registers used:
  1431 ;;		wreg, status,2, status,0
  1432 ;; Tracked objects:
  1433 ;;		On entry : 0/0
  1434 ;;		On exit  : 0/0
  1435 ;;		Unchanged: 0/0
  1436 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1437 ;;      Params:         4       0       0       0       0       0       0       0       0
  1438 ;;      Locals:         3       0       0       0       0       0       0       0       0
  1439 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1440 ;;      Totals:         7       0       0       0       0       0       0       0       0
  1441 ;;Total ram usage:        7 bytes
  1442 ;; Hardware stack levels used:    1
  1443 ;; Hardware stack levels required when called:    2
  1444 ;; This function calls:
  1445 ;;		Nothing
  1446 ;; This function is called by:
  1447 ;;		_utoa
  1448 ;; This function uses a non-reentrant model
  1449 ;;
  1450                           
  1451                           	psect	text9
  1452  000B9C                     __ptext9:
  1453                           	callstack 0
  1454  000B9C                     ___lwdiv:
  1455                           	callstack 26
  1456  000B9C  0E00               	movlw	0
  1457  000B9E  6E07               	movwf	(___lwdiv@quotient+1)^0,c
  1458  000BA0  0E00               	movlw	0
  1459  000BA2  6E06               	movwf	___lwdiv@quotient^0,c
  1460  000BA4  5004               	movf	___lwdiv@divisor^0,w,c
  1461  000BA6  1005               	iorwf	(___lwdiv@divisor+1)^0,w,c
  1462  000BA8  B4D8               	btfsc	status,2,c
  1463  000BAA  EFD9  F005         	goto	u311
  1464  000BAE  EFDB  F005         	goto	u310
  1465  000BB2                     u311:
  1466  000BB2  EF03  F006         	goto	l617
  1467  000BB6                     u310:
  1468  000BB6  0E01               	movlw	1
  1469  000BB8  6E08               	movwf	___lwdiv@counter^0,c
  1470  000BBA  EFE3  F005         	goto	l1185
  1471  000BBE                     l1183:
  1472  000BBE  90D8               	bcf	status,0,c
  1473  000BC0  3604               	rlcf	___lwdiv@divisor^0,f,c
  1474  000BC2  3605               	rlcf	(___lwdiv@divisor+1)^0,f,c
  1475  000BC4  2A08               	incf	___lwdiv@counter^0,f,c
  1476  000BC6                     l1185:
  1477  000BC6  AE05               	btfss	(___lwdiv@divisor+1)^0,7,c
  1478  000BC8  EFE8  F005         	goto	u321
  1479  000BCC  EFEA  F005         	goto	u320
  1480  000BD0                     u321:
  1481  000BD0  EFDF  F005         	goto	l1183
  1482  000BD4                     u320:
  1483  000BD4                     l1187:
  1484  000BD4  90D8               	bcf	status,0,c
  1485  000BD6  3606               	rlcf	___lwdiv@quotient^0,f,c
  1486  000BD8  3607               	rlcf	(___lwdiv@quotient+1)^0,f,c
  1487  000BDA  5004               	movf	___lwdiv@divisor^0,w,c
  1488  000BDC  5C02               	subwf	___lwdiv@dividend^0,w,c
  1489  000BDE  5005               	movf	(___lwdiv@divisor+1)^0,w,c
  1490  000BE0  5803               	subwfb	(___lwdiv@dividend+1)^0,w,c
  1491  000BE2  A0D8               	btfss	status,0,c
  1492  000BE4  EFF6  F005         	goto	u331
  1493  000BE8  EFF8  F005         	goto	u330
  1494  000BEC                     u331:
  1495  000BEC  EFFD  F005         	goto	l1195
  1496  000BF0                     u330:
  1497  000BF0  5004               	movf	___lwdiv@divisor^0,w,c
  1498  000BF2  5E02               	subwf	___lwdiv@dividend^0,f,c
  1499  000BF4  5005               	movf	(___lwdiv@divisor+1)^0,w,c
  1500  000BF6  5A03               	subwfb	(___lwdiv@dividend+1)^0,f,c
  1501  000BF8  8006               	bsf	___lwdiv@quotient^0,0,c
  1502  000BFA                     l1195:
  1503  000BFA  90D8               	bcf	status,0,c
  1504  000BFC  3205               	rrcf	(___lwdiv@divisor+1)^0,f,c
  1505  000BFE  3204               	rrcf	___lwdiv@divisor^0,f,c
  1506  000C00  2E08               	decfsz	___lwdiv@counter^0,f,c
  1507  000C02  EFEA  F005         	goto	l1187
  1508  000C06                     l617:
  1509  000C06  C006  F002         	movff	___lwdiv@quotient,?___lwdiv
  1510  000C0A  C007  F003         	movff	___lwdiv@quotient+1,?___lwdiv+1
  1511  000C0E  0012               	return		;funcret
  1512  000C10                     __end_of___lwdiv:
  1513                           	callstack 0
  1514                           
  1515 ;; *************** function _adc_init *****************
  1516 ;; Defined at:
  1517 ;;		line 30 in file "adc.c"
  1518 ;; Parameters:    Size  Location     Type
  1519 ;;		None
  1520 ;; Auto vars:     Size  Location     Type
  1521 ;;		None
  1522 ;; Return value:  Size  Location     Type
  1523 ;;                  1    wreg      void 
  1524 ;; Registers used:
  1525 ;;		wreg, status,2
  1526 ;; Tracked objects:
  1527 ;;		On entry : 0/0
  1528 ;;		On exit  : 0/0
  1529 ;;		Unchanged: 0/0
  1530 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1531 ;;      Params:         0       0       0       0       0       0       0       0       0
  1532 ;;      Locals:         0       0       0       0       0       0       0       0       0
  1533 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1534 ;;      Totals:         0       0       0       0       0       0       0       0       0
  1535 ;;Total ram usage:        0 bytes
  1536 ;; Hardware stack levels used:    1
  1537 ;; Hardware stack levels required when called:    2
  1538 ;; This function calls:
  1539 ;;		Nothing
  1540 ;; This function is called by:
  1541 ;;		_main
  1542 ;; This function uses a non-reentrant model
  1543 ;;
  1544                           
  1545                           	psect	text10
  1546  000E32                     __ptext10:
  1547                           	callstack 0
  1548  000E32                     _adc_init:
  1549                           	callstack 28
  1550  000E32                     
  1551                           ;adc.c: 33:     ADCON0 = 0x01;
  1552  000E32  0E01               	movlw	1
  1553  000E34  6EC2               	movwf	194,c	;volatile
  1554  000E36                     
  1555                           ;adc.c: 35:     ADCON1bits.VCFG0 = 0;
  1556  000E36  98C1               	bcf	193,4,c	;volatile
  1557  000E38                     
  1558                           ;adc.c: 36:     ADCON1bits.VCFG1 = 0;
  1559  000E38  9AC1               	bcf	193,5,c	;volatile
  1560                           
  1561                           ;adc.c: 37:     ADCON1bits.PCFG = 0b1110;
  1562  000E3A  50C1               	movf	193,w,c	;volatile
  1563  000E3C  0BF0               	andlw	-16
  1564  000E3E  090E               	iorlw	14
  1565  000E40  6EC1               	movwf	193,c	;volatile
  1566  000E42                     
  1567                           ;adc.c: 39:     ADCON2bits.ADFM = 0;
  1568  000E42  9EC0               	bcf	192,7,c	;volatile
  1569                           
  1570                           ;adc.c: 40:     ADCON2bits.ADCS = 0b101;
  1571  000E44  50C0               	movf	192,w,c	;volatile
  1572  000E46  0BF8               	andlw	-8
  1573  000E48  0905               	iorlw	5
  1574  000E4A  6EC0               	movwf	192,c	;volatile
  1575                           
  1576                           ;adc.c: 41:     ADCON2bits.ACQT = 0b010;
  1577  000E4C  50C0               	movf	192,w,c	;volatile
  1578  000E4E  0BC7               	andlw	-57
  1579  000E50  0910               	iorlw	16
  1580  000E52  6EC0               	movwf	192,c	;volatile
  1581  000E54  0012               	return		;funcret
  1582  000E56                     __end_of_adc_init:
  1583                           	callstack 0
  1584                           
  1585 ;; *************** function _adc_amostra *****************
  1586 ;; Defined at:
  1587 ;;		line 48 in file "adc.c"
  1588 ;; Parameters:    Size  Location     Type
  1589 ;;  canal           1    wreg     unsigned char 
  1590 ;; Auto vars:     Size  Location     Type
  1591 ;;  canal           1    7[COMRAM] unsigned char 
  1592 ;; Return value:  Size  Location     Type
  1593 ;;                  2    1[COMRAM] unsigned int 
  1594 ;; Registers used:
  1595 ;;		wreg, status,2, status,0
  1596 ;; Tracked objects:
  1597 ;;		On entry : 0/0
  1598 ;;		On exit  : 0/0
  1599 ;;		Unchanged: 0/0
  1600 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1601 ;;      Params:         2       0       0       0       0       0       0       0       0
  1602 ;;      Locals:         1       0       0       0       0       0       0       0       0
  1603 ;;      Temps:          4       0       0       0       0       0       0       0       0
  1604 ;;      Totals:         7       0       0       0       0       0       0       0       0
  1605 ;;Total ram usage:        7 bytes
  1606 ;; Hardware stack levels used:    1
  1607 ;; Hardware stack levels required when called:    2
  1608 ;; This function calls:
  1609 ;;		Nothing
  1610 ;; This function is called by:
  1611 ;;		_main
  1612 ;; This function uses a non-reentrant model
  1613 ;;
  1614                           
  1615                           	psect	text11
  1616  000B04                     __ptext11:
  1617                           	callstack 0
  1618  000B04                     _adc_amostra:
  1619                           	callstack 28
  1620                           
  1621                           ;incstack = 0
  1622                           ;adc_amostra@canal stored from wreg
  1623  000B04  6E08               	movwf	adc_amostra@canal^0,c
  1624  000B06                     
  1625                           ;adc.c: 48: unsigned int adc_amostra(unsigned char canal);adc.c: 49: {;adc.c: 52:     sw
      +                          itch(canal)
  1626  000B06  EF95  F005         	goto	l1263
  1627  000B0A                     l1255:
  1628                           
  1629                           ;adc.c: 55:         ADCON0bits.CHS = 0b0000;
  1630  000B0A  0EC3               	movlw	-61
  1631  000B0C  16C2               	andwf	194,f,c	;volatile
  1632                           
  1633                           ;adc.c: 56:         break;
  1634  000B0E  EFAE  F005         	goto	l129
  1635  000B12                     l1257:
  1636                           
  1637                           ;adc.c: 58:         ADCON0bits.CHS = 0b0001;
  1638  000B12  50C2               	movf	194,w,c	;volatile
  1639  000B14  0BC3               	andlw	-61
  1640  000B16  0904               	iorlw	4
  1641  000B18  6EC2               	movwf	194,c	;volatile
  1642                           
  1643                           ;adc.c: 59:         break;
  1644  000B1A  EFAE  F005         	goto	l129
  1645  000B1E                     l1259:
  1646                           
  1647                           ;adc.c: 61:         ADCON0bits.CHS = 0b0010;
  1648  000B1E  50C2               	movf	194,w,c	;volatile
  1649  000B20  0BC3               	andlw	-61
  1650  000B22  0908               	iorlw	8
  1651  000B24  6EC2               	movwf	194,c	;volatile
  1652                           
  1653                           ;adc.c: 62:         break;
  1654  000B26  EFAE  F005         	goto	l129
  1655  000B2A                     l1263:
  1656  000B2A  5008               	movf	adc_amostra@canal^0,w,c
  1657  000B2C  6E04               	movwf	??_adc_amostra^0,c
  1658  000B2E  6A05               	clrf	(??_adc_amostra+1)^0,c
  1659                           
  1660                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  1661                           ; Switch size 1, requested type "simple"
  1662                           ; Number of cases is 1, Range of values is 0 to 0
  1663                           ; switch strategies available:
  1664                           ; Name         Instructions Cycles
  1665                           ; simple_byte            4     3 (average)
  1666                           ;	Chosen strategy is simple_byte
  1667  000B30  5005               	movf	(??_adc_amostra+1)^0,w,c
  1668  000B32  0A00               	xorlw	0	; case 0
  1669  000B34  B4D8               	btfsc	status,2,c
  1670  000B36  EF9F  F005         	goto	l1381
  1671  000B3A  EFAE  F005         	goto	l129
  1672  000B3E                     l1381:
  1673                           
  1674                           ; Switch size 1, requested type "simple"
  1675                           ; Number of cases is 3, Range of values is 0 to 2
  1676                           ; switch strategies available:
  1677                           ; Name         Instructions Cycles
  1678                           ; simple_byte           10     6 (average)
  1679                           ;	Chosen strategy is simple_byte
  1680  000B3E  5004               	movf	??_adc_amostra^0,w,c
  1681  000B40  0A00               	xorlw	0	; case 0
  1682  000B42  B4D8               	btfsc	status,2,c
  1683  000B44  EF85  F005         	goto	l1255
  1684  000B48  0A01               	xorlw	1	; case 1
  1685  000B4A  B4D8               	btfsc	status,2,c
  1686  000B4C  EF89  F005         	goto	l1257
  1687  000B50  0A03               	xorlw	3	; case 2
  1688  000B52  B4D8               	btfsc	status,2,c
  1689  000B54  EF8F  F005         	goto	l1259
  1690  000B58  EFAE  F005         	goto	l129
  1691  000B5C                     l129:
  1692                           
  1693                           ;adc.c: 66:     ADCON0bits.GO=1;
  1694  000B5C  82C2               	bsf	194,1,c	;volatile
  1695  000B5E                     l132:
  1696  000B5E  B2C2               	btfsc	194,1,c	;volatile
  1697  000B60  EFB4  F005         	goto	u411
  1698  000B64  EFB6  F005         	goto	u410
  1699  000B68                     u411:
  1700  000B68  EFAF  F005         	goto	l132
  1701  000B6C                     u410:
  1702  000B6C                     
  1703                           ;adc.c: 69:    return ((((unsigned int)ADRESH)<<2)|(ADRESL>>6));
  1704  000B6C  CFC3 F004          	movff	4035,??_adc_amostra	;volatile
  1705  000B70  0E06               	movlw	6
  1706  000B72  6E05               	movwf	(??_adc_amostra+1)^0,c
  1707  000B74                     u425:
  1708  000B74  90D8               	bcf	status,0,c
  1709  000B76  3204               	rrcf	??_adc_amostra^0,f,c
  1710  000B78  2E05               	decfsz	(??_adc_amostra+1)^0,f,c
  1711  000B7A  EFBA  F005         	goto	u425
  1712  000B7E  5004               	movf	??_adc_amostra^0,w,c
  1713  000B80  CFC4 F006          	movff	4036,??_adc_amostra+2	;volatile
  1714  000B84  6A07               	clrf	(??_adc_amostra+3)^0,c
  1715  000B86  90D8               	bcf	status,0,c
  1716  000B88  3606               	rlcf	(??_adc_amostra+2)^0,f,c
  1717  000B8A  3607               	rlcf	(??_adc_amostra+3)^0,f,c
  1718  000B8C  90D8               	bcf	status,0,c
  1719  000B8E  3606               	rlcf	(??_adc_amostra+2)^0,f,c
  1720  000B90  3607               	rlcf	(??_adc_amostra+3)^0,f,c
  1721  000B92  1006               	iorwf	(??_adc_amostra+2)^0,w,c
  1722  000B94  6E02               	movwf	?_adc_amostra^0,c
  1723  000B96  5007               	movf	(??_adc_amostra+3)^0,w,c
  1724  000B98  6E03               	movwf	(?_adc_amostra+1)^0,c
  1725  000B9A  0012               	return		;funcret
  1726  000B9C                     __end_of_adc_amostra:
  1727                           	callstack 0
  1728                           
  1729 ;; *************** function ___wmul *****************
  1730 ;; Defined at:
  1731 ;;		line 15 in file "D:\Arquivos de Programas\Microchip\xc8\pic\sources\c90\common\Umul16.c"
  1732 ;; Parameters:    Size  Location     Type
  1733 ;;  multiplier      2    8[COMRAM] unsigned int 
  1734 ;;  multiplicand    2   10[COMRAM] unsigned int 
  1735 ;; Auto vars:     Size  Location     Type
  1736 ;;  product         2   12[COMRAM] unsigned int 
  1737 ;; Return value:  Size  Location     Type
  1738 ;;                  2    8[COMRAM] unsigned int 
  1739 ;; Registers used:
  1740 ;;		wreg, status,2, status,0, prodl, prodh
  1741 ;; Tracked objects:
  1742 ;;		On entry : 0/0
  1743 ;;		On exit  : 0/0
  1744 ;;		Unchanged: 0/0
  1745 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1746 ;;      Params:         4       0       0       0       0       0       0       0       0
  1747 ;;      Locals:         2       0       0       0       0       0       0       0       0
  1748 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1749 ;;      Totals:         6       0       0       0       0       0       0       0       0
  1750 ;;Total ram usage:        6 bytes
  1751 ;; Hardware stack levels used:    1
  1752 ;; Hardware stack levels required when called:    2
  1753 ;; This function calls:
  1754 ;;		Nothing
  1755 ;; This function is called by:
  1756 ;;		_main
  1757 ;; This function uses a non-reentrant model
  1758 ;;
  1759                           
  1760                           	psect	text12
  1761  000E0C                     __ptext12:
  1762                           	callstack 0
  1763  000E0C                     ___wmul:
  1764                           	callstack 28
  1765  000E0C  5009               	movf	___wmul@multiplier^0,w,c
  1766  000E0E  020B               	mulwf	___wmul@multiplicand^0,c
  1767  000E10  CFF3 F00D          	movff	prodl,___wmul@product
  1768  000E14  CFF4 F00E          	movff	prodh,___wmul@product+1
  1769  000E18  5009               	movf	___wmul@multiplier^0,w,c
  1770  000E1A  020C               	mulwf	(___wmul@multiplicand+1)^0,c
  1771  000E1C  50F3               	movf	243,w,c
  1772  000E1E  260E               	addwf	(___wmul@product+1)^0,f,c
  1773  000E20  500A               	movf	(___wmul@multiplier+1)^0,w,c
  1774  000E22  020B               	mulwf	___wmul@multiplicand^0,c
  1775  000E24  50F3               	movf	243,w,c
  1776  000E26  260E               	addwf	(___wmul@product+1)^0,f,c
  1777  000E28  C00D  F009         	movff	___wmul@product,?___wmul
  1778  000E2C  C00E  F00A         	movff	___wmul@product+1,?___wmul+1
  1779  000E30  0012               	return		;funcret
  1780  000E32                     __end_of___wmul:
  1781                           	callstack 0
  1782                           
  1783 ;; *************** function _rotinaBaixaPrioridade *****************
  1784 ;; Defined at:
  1785 ;;		line 161 in file "main.c"
  1786 ;; Parameters:    Size  Location     Type
  1787 ;;		None
  1788 ;; Auto vars:     Size  Location     Type
  1789 ;;		None
  1790 ;; Return value:  Size  Location     Type
  1791 ;;                  1    wreg      void 
  1792 ;; Registers used:
  1793 ;;		None
  1794 ;; Tracked objects:
  1795 ;;		On entry : 0/0
  1796 ;;		On exit  : 0/0
  1797 ;;		Unchanged: 0/0
  1798 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1799 ;;      Params:         0       0       0       0       0       0       0       0       0
  1800 ;;      Locals:         0       0       0       0       0       0       0       0       0
  1801 ;;      Temps:          1       0       0       0       0       0       0       0       0
  1802 ;;      Totals:         1       0       0       0       0       0       0       0       0
  1803 ;;Total ram usage:        1 bytes
  1804 ;; Hardware stack levels used:    1
  1805 ;; Hardware stack levels required when called:    1
  1806 ;; This function calls:
  1807 ;;		Nothing
  1808 ;; This function is called by:
  1809 ;;		Interrupt level 1
  1810 ;; This function uses a non-reentrant model
  1811 ;;
  1812                           
  1813                           	psect	intcodelo
  1814  000018                     __pintcodelo:
  1815                           	callstack 0
  1816  000018                     _rotinaBaixaPrioridade:
  1817                           	callstack 26
  1818                           
  1819                           ;incstack = 0
  1820  000018  802A               	bsf	int$flags,0,c	;set compiler interrupt flag (level 1)
  1821  00001A  CFE0 F001          	movff	bsr,??_rotinaBaixaPrioridade
  1822  00001E                     
  1823                           ;main.c: 162:     INTCONbits.GIEH = 0;
  1824  00001E  9EF2               	bcf	242,7,c	;volatile
  1825                           
  1826                           ;main.c: 165:     INTCONbits.GIEH = 1;
  1827  000020  8EF2               	bsf	242,7,c	;volatile
  1828  000022  C001  FFE0         	movff	??_rotinaBaixaPrioridade,bsr
  1829  000026  902A               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
  1830  000028  0010               	retfie	
  1831  00002A                     __end_of_rotinaBaixaPrioridade:
  1832                           	callstack 0
  1833                           
  1834 ;; *************** function _rotinaAltaPrioridade *****************
  1835 ;; Defined at:
  1836 ;;		line 143 in file "main.c"
  1837 ;; Parameters:    Size  Location     Type
  1838 ;;		None
  1839 ;; Auto vars:     Size  Location     Type
  1840 ;;		None
  1841 ;; Return value:  Size  Location     Type
  1842 ;;                  1    wreg      void 
  1843 ;; Registers used:
  1844 ;;		wreg, status,2, status,0
  1845 ;; Tracked objects:
  1846 ;;		On entry : 0/0
  1847 ;;		On exit  : 0/0
  1848 ;;		Unchanged: 0/0
  1849 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1850 ;;      Params:         0       0       0       0       0       0       0       0       0
  1851 ;;      Locals:         0       0       0       0       0       0       0       0       0
  1852 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1853 ;;      Totals:         0       0       0       0       0       0       0       0       0
  1854 ;;Total ram usage:        0 bytes
  1855 ;; Hardware stack levels used:    1
  1856 ;; This function calls:
  1857 ;;		Nothing
  1858 ;; This function is called by:
  1859 ;;		Interrupt level 2
  1860 ;; This function uses a non-reentrant model
  1861 ;;
  1862                           
  1863                           	psect	intcode
  1864  000008                     __pintcode:
  1865                           	callstack 0
  1866  000008                     _rotinaAltaPrioridade:
  1867                           	callstack 26
  1868                           
  1869                           ;incstack = 0
  1870  000008  822A               	bsf	int$flags,1,c	;set compiler interrupt flag (level 2)
  1871  00000A  EDB8  F006         	call	int_func,f	;refresh shadow registers
  1872                           
  1873                           	psect	intcode_body
  1874  000D70                     __pintcode_body:
  1875                           	callstack 26
  1876  000D70                     int_func:
  1877                           	callstack 26
  1878  000D70  0006               	pop		; remove dummy address from shadow register refresh
  1879  000D72                     
  1880                           ;main.c: 144:     INTCONbits.GIEH = 0;
  1881  000D72  9EF2               	bcf	242,7,c	;volatile
  1882                           
  1883                           ;main.c: 146:     if(INTCONbits.TMR0IF){
  1884  000D74  A4F2               	btfss	242,2,c	;volatile
  1885  000D76  EFBF  F006         	goto	i2u29_41
  1886  000D7A  EFC1  F006         	goto	i2u29_40
  1887  000D7E                     i2u29_41:
  1888  000D7E  EFD1  F006         	goto	i2l1169
  1889  000D82                     i2u29_40:
  1890  000D82                     
  1891                           ;main.c: 148:         if(flag1Botao1){
  1892  000D82  5028               	movf	_flag1Botao1^0,w,c
  1893  000D84  B4D8               	btfsc	status,2,c
  1894  000D86  EFC7  F006         	goto	i2u30_41
  1895  000D8A  EFC9  F006         	goto	i2u30_40
  1896  000D8E                     i2u30_41:
  1897  000D8E  EFCA  F006         	goto	i2l103
  1898  000D92                     i2u30_40:
  1899  000D92                     
  1900                           ;main.c: 149:             contaDebounce++;
  1901  000D92  2A29               	incf	_contaDebounce^0,f,c
  1902  000D94                     i2l103:
  1903                           
  1904                           ;main.c: 152:         tempoLED++;
  1905  000D94  4A26               	infsnz	_tempoLED^0,f,c
  1906  000D96  2A27               	incf	(_tempoLED+1)^0,f,c
  1907  000D98                     
  1908                           ;main.c: 154:         INTCONbits.TMR0IF = 0;
  1909  000D98  94F2               	bcf	242,2,c	;volatile
  1910  000D9A                     
  1911                           ;main.c: 155:         TMR0=217;
  1912  000D9A  0E00               	movlw	0
  1913  000D9C  6ED7               	movwf	215,c	;volatile
  1914  000D9E  0ED9               	movlw	217
  1915  000DA0  6ED6               	movwf	214,c	;volatile
  1916  000DA2                     i2l1169:
  1917                           
  1918                           ;main.c: 158:      INTCONbits.GIEH = 1;
  1919  000DA2  8EF2               	bsf	242,7,c	;volatile
  1920  000DA4  922A               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
  1921  000DA6  0011               	retfie		f
  1922  000DA8                     __end_of_rotinaAltaPrioridade:
  1923                           	callstack 0
  1924                           
  1925                           	psect	rparam
  1926  0000                     
  1927                           	psect	temp
  1928  00002A                     btemp:
  1929                           	callstack 0
  1930  00002A                     	ds	1
  1931  0000                     int$flags	set	btemp
  1932  0000                     wtemp8	set	btemp+1
  1933  0000                     ttemp5	set	btemp+1
  1934  0000                     ttemp6	set	btemp+4
  1935  0000                     ttemp7	set	btemp+8
  1936                           
  1937                           	psect	idloc
  1938                           
  1939                           ;Config register IDLOC0 @ 0x200000
  1940                           ;	unspecified, using default values
  1941  200000                     	org	2097152
  1942  200000  FF                 	db	255
  1943                           
  1944                           ;Config register IDLOC1 @ 0x200001
  1945                           ;	unspecified, using default values
  1946  200001                     	org	2097153
  1947  200001  FF                 	db	255
  1948                           
  1949                           ;Config register IDLOC2 @ 0x200002
  1950                           ;	unspecified, using default values
  1951  200002                     	org	2097154
  1952  200002  FF                 	db	255
  1953                           
  1954                           ;Config register IDLOC3 @ 0x200003
  1955                           ;	unspecified, using default values
  1956  200003                     	org	2097155
  1957  200003  FF                 	db	255
  1958                           
  1959                           ;Config register IDLOC4 @ 0x200004
  1960                           ;	unspecified, using default values
  1961  200004                     	org	2097156
  1962  200004  FF                 	db	255
  1963                           
  1964                           ;Config register IDLOC5 @ 0x200005
  1965                           ;	unspecified, using default values
  1966  200005                     	org	2097157
  1967  200005  FF                 	db	255
  1968                           
  1969                           ;Config register IDLOC6 @ 0x200006
  1970                           ;	unspecified, using default values
  1971  200006                     	org	2097158
  1972  200006  FF                 	db	255
  1973                           
  1974                           ;Config register IDLOC7 @ 0x200007
  1975                           ;	unspecified, using default values
  1976  200007                     	org	2097159
  1977  200007  FF                 	db	255
  1978                           
  1979                           	psect	config
  1980                           
  1981                           ;Config register CONFIG1L @ 0x300000
  1982                           ;	PLL Prescaler Selection bits
  1983                           ;	PLLDIV = 1, No prescale (4 MHz oscillator input drives PLL directly)
  1984                           ;	System Clock Postscaler Selection bits
  1985                           ;	CPUDIV = OSC4_PLL6, [Primary Oscillator Src: /4][96 MHz PLL Src: /6]
  1986                           ;	USB Clock Selection bit (used in Full-Speed USB mode only; UCFG:FSEN = 1)
  1987                           ;	USBDIV = 1, USB clock source comes directly from the primary oscillator block with no 
      +                          postscale
  1988  300000                     	org	3145728
  1989  300000  18                 	db	24
  1990                           
  1991                           ;Config register CONFIG1H @ 0x300001
  1992                           ;	Oscillator Selection bits
  1993                           ;	FOSC = HSPLL_HS, HS oscillator, PLL enabled (HSPLL)
  1994                           ;	Fail-Safe Clock Monitor Enable bit
  1995                           ;	FCMEN = OFF, Fail-Safe Clock Monitor disabled
  1996                           ;	Internal/External Oscillator Switchover bit
  1997                           ;	IESO = OFF, Oscillator Switchover mode disabled
  1998  300001                     	org	3145729
  1999  300001  0E                 	db	14
  2000                           
  2001                           ;Config register CONFIG2L @ 0x300002
  2002                           ;	Power-up Timer Enable bit
  2003                           ;	PWRT = ON, PWRT enabled
  2004                           ;	Brown-out Reset Enable bits
  2005                           ;	BOR = ON, Brown-out Reset enabled in hardware only (SBOREN is disabled)
  2006                           ;	Brown-out Reset Voltage bits
  2007                           ;	BORV = 3, Minimum setting 2.05V
  2008                           ;	USB Voltage Regulator Enable bit
  2009                           ;	VREGEN = OFF, USB voltage regulator disabled
  2010  300002                     	org	3145730
  2011  300002  1E                 	db	30
  2012                           
  2013                           ;Config register CONFIG2H @ 0x300003
  2014                           ;	Watchdog Timer Enable bit
  2015                           ;	WDT = OFF, WDT disabled (control is placed on the SWDTEN bit)
  2016                           ;	Watchdog Timer Postscale Select bits
  2017                           ;	WDTPS = 32768, 1:32768
  2018  300003                     	org	3145731
  2019  300003  1E                 	db	30
  2020                           
  2021                           ; Padding undefined space
  2022  300004                     	org	3145732
  2023  300004  FF                 	db	255
  2024                           
  2025                           ;Config register CONFIG3H @ 0x300005
  2026                           ;	CCP2 MUX bit
  2027                           ;	CCP2MX = ON, CCP2 input/output is multiplexed with RC1
  2028                           ;	PORTB A/D Enable bit
  2029                           ;	PBADEN = OFF, PORTB<4:0> pins are configured as digital I/O on Reset
  2030                           ;	Low-Power Timer 1 Oscillator Enable bit
  2031                           ;	LPT1OSC = OFF, Timer1 configured for higher power operation
  2032                           ;	MCLR Pin Enable bit
  2033                           ;	MCLRE = ON, MCLR pin enabled; RE3 input pin disabled
  2034  300005                     	org	3145733
  2035  300005  81                 	db	129
  2036                           
  2037                           ;Config register CONFIG4L @ 0x300006
  2038                           ;	Stack Full/Underflow Reset Enable bit
  2039                           ;	STVREN = ON, Stack full/underflow will cause Reset
  2040                           ;	Single-Supply ICSP Enable bit
  2041                           ;	LVP = OFF, Single-Supply ICSP disabled
  2042                           ;	Dedicated In-Circuit Debug/Programming Port (ICPORT) Enable bit
  2043                           ;	ICPRT = OFF, ICPORT disabled
  2044                           ;	Extended Instruction Set Enable bit
  2045                           ;	XINST = OFF, Instruction set extension and Indexed Addressing mode disabled (Legacy mo
      +                          de)
  2046                           ;	Background Debugger Enable bit
  2047                           ;	DEBUG = 0x1, unprogrammed default
  2048  300006                     	org	3145734
  2049  300006  81                 	db	129
  2050                           
  2051                           ; Padding undefined space
  2052  300007                     	org	3145735
  2053  300007  FF                 	db	255
  2054                           
  2055                           ;Config register CONFIG5L @ 0x300008
  2056                           ;	Code Protection bit
  2057                           ;	CP0 = OFF, Block 0 (000800-001FFFh) is not code-protected
  2058                           ;	Code Protection bit
  2059                           ;	CP1 = OFF, Block 1 (002000-003FFFh) is not code-protected
  2060                           ;	Code Protection bit
  2061                           ;	CP2 = OFF, Block 2 (004000-005FFFh) is not code-protected
  2062                           ;	Code Protection bit
  2063                           ;	CP3 = OFF, Block 3 (006000-007FFFh) is not code-protected
  2064  300008                     	org	3145736
  2065  300008  0F                 	db	15
  2066                           
  2067                           ;Config register CONFIG5H @ 0x300009
  2068                           ;	Boot Block Code Protection bit
  2069                           ;	CPB = OFF, Boot block (000000-0007FFh) is not code-protected
  2070                           ;	Data EEPROM Code Protection bit
  2071                           ;	CPD = OFF, Data EEPROM is not code-protected
  2072  300009                     	org	3145737
  2073  300009  C0                 	db	192
  2074                           
  2075                           ;Config register CONFIG6L @ 0x30000A
  2076                           ;	Write Protection bit
  2077                           ;	WRT0 = OFF, Block 0 (000800-001FFFh) is not write-protected
  2078                           ;	Write Protection bit
  2079                           ;	WRT1 = OFF, Block 1 (002000-003FFFh) is not write-protected
  2080                           ;	Write Protection bit
  2081                           ;	WRT2 = OFF, Block 2 (004000-005FFFh) is not write-protected
  2082                           ;	Write Protection bit
  2083                           ;	WRT3 = OFF, Block 3 (006000-007FFFh) is not write-protected
  2084  30000A                     	org	3145738
  2085  30000A  0F                 	db	15
  2086                           
  2087                           ;Config register CONFIG6H @ 0x30000B
  2088                           ;	Configuration Register Write Protection bit
  2089                           ;	WRTC = OFF, Configuration registers (300000-3000FFh) are not write-protected
  2090                           ;	Boot Block Write Protection bit
  2091                           ;	WRTB = OFF, Boot block (000000-0007FFh) is not write-protected
  2092                           ;	Data EEPROM Write Protection bit
  2093                           ;	WRTD = OFF, Data EEPROM is not write-protected
  2094  30000B                     	org	3145739
  2095  30000B  E0                 	db	224
  2096                           
  2097                           ;Config register CONFIG7L @ 0x30000C
  2098                           ;	Table Read Protection bit
  2099                           ;	EBTR0 = OFF, Block 0 (000800-001FFFh) is not protected from table reads executed in ot
      +                          her blocks
  2100                           ;	Table Read Protection bit
  2101                           ;	EBTR1 = OFF, Block 1 (002000-003FFFh) is not protected from table reads executed in ot
      +                          her blocks
  2102                           ;	Table Read Protection bit
  2103                           ;	EBTR2 = OFF, Block 2 (004000-005FFFh) is not protected from table reads executed in ot
      +                          her blocks
  2104                           ;	Table Read Protection bit
  2105                           ;	EBTR3 = OFF, Block 3 (006000-007FFFh) is not protected from table reads executed in ot
      +                          her blocks
  2106  30000C                     	org	3145740
  2107  30000C  0F                 	db	15
  2108                           
  2109                           ;Config register CONFIG7H @ 0x30000D
  2110                           ;	Boot Block Table Read Protection bit
  2111                           ;	EBTRB = OFF, Boot block (000000-0007FFh) is not protected from table reads executed in
      +                           other blocks
  2112  30000D                     	org	3145741
  2113  30000D  40                 	db	64
  2114                           tosu	equ	0xFFF
  2115                           tosh	equ	0xFFE
  2116                           tosl	equ	0xFFD
  2117                           stkptr	equ	0xFFC
  2118                           pclatu	equ	0xFFB
  2119                           pclath	equ	0xFFA
  2120                           pcl	equ	0xFF9
  2121                           tblptru	equ	0xFF8
  2122                           tblptrh	equ	0xFF7
  2123                           tblptrl	equ	0xFF6
  2124                           tablat	equ	0xFF5
  2125                           prodh	equ	0xFF4
  2126                           prodl	equ	0xFF3
  2127                           indf0	equ	0xFEF
  2128                           postinc0	equ	0xFEE
  2129                           postdec0	equ	0xFED
  2130                           preinc0	equ	0xFEC
  2131                           plusw0	equ	0xFEB
  2132                           fsr0h	equ	0xFEA
  2133                           fsr0l	equ	0xFE9
  2134                           wreg	equ	0xFE8
  2135                           indf1	equ	0xFE7
  2136                           postinc1	equ	0xFE6
  2137                           postdec1	equ	0xFE5
  2138                           preinc1	equ	0xFE4
  2139                           plusw1	equ	0xFE3
  2140                           fsr1h	equ	0xFE2
  2141                           fsr1l	equ	0xFE1
  2142                           bsr	equ	0xFE0
  2143                           indf2	equ	0xFDF
  2144                           postinc2	equ	0xFDE
  2145                           postdec2	equ	0xFDD
  2146                           preinc2	equ	0xFDC
  2147                           plusw2	equ	0xFDB
  2148                           fsr2h	equ	0xFDA
  2149                           fsr2l	equ	0xFD9
  2150                           status	equ	0xFD8

Data Sizes:
    Strings     24
    Constant    0
    Data        0
    BSS         4
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           94     37      41
    BANK0           160      0       0
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0

Pointer List with Targets:

    utoa@buf	PTR unsigned char  size(2) Largest target is 6
		 -> main@str(COMRAM[6]), 

    sp__utoa	PTR unsigned char  size(2) Largest target is 6
		 -> main@str(COMRAM[6]), 

    itoa@buf	PTR unsigned char  size(2) Largest target is 6
		 -> main@str(COMRAM[6]), 

    itoa@cp	PTR unsigned char  size(2) Largest target is 6
		 -> main@str(COMRAM[6]), 

    sp__itoa	PTR unsigned char  size(2) Largest target is 6
		 -> main@str(COMRAM[6]), 

    lcd_str@str	PTR const unsigned char  size(2) Largest target is 16
		 -> STR_2(CODE[8]), STR_1(CODE[16]), 


Critical Paths under _main in COMRAM

    _main->_itoa
    _lcd_str->_lcd_dat
    _lcd_dat->_lcd_wr
    _lcd_init->_lcd_cmd
    _lcd_cmd->_lcd_wr
    _itoa->_utoa
    _utoa->___lwdiv
    ___wmul->_adc_amostra

Critical Paths under _rotinaBaixaPrioridade in COMRAM

    None.

Critical Paths under _rotinaAltaPrioridade in COMRAM

    None.

Critical Paths under _main in BANK0

    None.

Critical Paths under _rotinaBaixaPrioridade in BANK0

    None.

Critical Paths under _rotinaAltaPrioridade in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _rotinaBaixaPrioridade in BANK1

    None.

Critical Paths under _rotinaAltaPrioridade in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _rotinaBaixaPrioridade in BANK2

    None.

Critical Paths under _rotinaAltaPrioridade in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _rotinaBaixaPrioridade in BANK3

    None.

Critical Paths under _rotinaAltaPrioridade in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _rotinaBaixaPrioridade in BANK4

    None.

Critical Paths under _rotinaAltaPrioridade in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _rotinaBaixaPrioridade in BANK5

    None.

Critical Paths under _rotinaAltaPrioridade in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _rotinaBaixaPrioridade in BANK6

    None.

Critical Paths under _rotinaAltaPrioridade in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _rotinaBaixaPrioridade in BANK7

    None.

Critical Paths under _rotinaAltaPrioridade in BANK7

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                12    12      0    2651
                                             25 COMRAM    12    12      0
                             ___wmul
                        _adc_amostra
                           _adc_init
                               _itoa
                            _lcd_cmd
                            _lcd_dat
                           _lcd_init
                            _lcd_str
 ---------------------------------------------------------------------------------
 (1) _lcd_str                                              5     3      2     272
                                              4 COMRAM     5     3      2
                            _lcd_dat
 ---------------------------------------------------------------------------------
 (2) _lcd_dat                                              2     2      0      30
                                              2 COMRAM     2     2      0
                             _lcd_wr
 ---------------------------------------------------------------------------------
 (1) _lcd_init                                             1     1      0      30
                                              4 COMRAM     1     1      0
                            _lcd_cmd
 ---------------------------------------------------------------------------------
 (2) _lcd_cmd                                              2     2      0      30
                                              2 COMRAM     2     2      0
                             _lcd_wr
 ---------------------------------------------------------------------------------
 (3) _lcd_wr                                               1     1      0      15
                                              1 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (1) _itoa                                                 8     2      6    1698
                                             17 COMRAM     8     2      6
                               _utoa
 ---------------------------------------------------------------------------------
 (2) _utoa                                                 9     3      6    1307
                                              8 COMRAM     9     3      6
                            ___lwdiv
                            ___lwmod
 ---------------------------------------------------------------------------------
 (3) ___lwmod                                              5     1      4     311
                                              1 COMRAM     5     1      4
 ---------------------------------------------------------------------------------
 (3) ___lwdiv                                              7     3      4     466
                                              1 COMRAM     7     3      4
 ---------------------------------------------------------------------------------
 (1) _adc_init                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _adc_amostra                                          7     5      2      22
                                              1 COMRAM     7     5      2
 ---------------------------------------------------------------------------------
 (1) ___wmul                                               6     2      4     311
                                              8 COMRAM     6     2      4
                        _adc_amostra (ARG)
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (4) _rotinaBaixaPrioridade                                1     1      0       0
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (5) _rotinaAltaPrioridade                                 0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 5
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   ___wmul
     _adc_amostra (ARG)
   _adc_amostra
   _adc_init
   _itoa
     _utoa
       ___lwdiv
       ___lwmod
   _lcd_cmd
     _lcd_wr
   _lcd_dat
     _lcd_wr
   _lcd_init
     _lcd_cmd
       _lcd_wr
   _lcd_str
     _lcd_dat
       _lcd_wr

 _rotinaBaixaPrioridade (ROOT)

 _rotinaAltaPrioridade (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             7FF      0       0      21        0.0%
EEDATA             100      0       0       0        0.0%
BITBANK7           100      0       0      18        0.0%
BANK7              100      0       0      19        0.0%
BITBANK6           100      0       0      16        0.0%
BANK6              100      0       0      17        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0       0       7        0.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0      0       0       5        0.0%
BITCOMRAM           5E      0       0       0        0.0%
COMRAM              5E     25      29       1       43.6%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0      29      20        0.0%
DATA                 0      0      29       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.20 build 20200408173844 
Symbol Table                                                                                   Thu Sep 17 20:05:27 2020

                             l9 0E72            _rotinaAltaPrioridade 0008                              l12 0E0A  
                            l15 0DD8                              l24 0D2A                              l18 0C76  
                            l90 09EC                              l91 09E8                              l88 09B4  
                            bsr 000FE0             ___wmul@multiplicand 000B            __size_of_adc_amostra 0098  
                           l132 0B5E                             l124 0E54                             l135 0B9A  
                           l129 0B5C                             l138 0E30                             l624 0C0E  
                           l617 0C06                             l634 0CDA                             l627 0CD2  
                           l811 0B02                             l803 0D6E                             l809 0AD6  
                           l941 0DE4                             l943 0DE6                             l951 0DAA  
                           l945 0DF6                             l937 0DDC                             l961 0DC6  
                           l953 0DAC                             l947 0DF8                             l939 0DDE  
                           l963 0DD6                             l955 0DB2                             l949 0E08  
                           l957 0DB4                             l959 0DC4                             l897 0E6E  
                           l995 0C10                             l997 0C14                             l999 0C24  
                           u310 0BB6                             u311 0BB2                             u320 0BD4  
                           u400 0D2A                             u321 0BD0                             u401 0D26  
                           u410 0B6C                             u330 0BF0                             u411 0B68  
                           u331 0BEC                             u340 0C8A                             u500 09A8  
                           u341 0C86                             u501 09A4                             u350 0CA8  
                           u430 0D3A                             u510 09C4                             u351 0CA4  
                           u431 0D36                             u511 09C0                             u360 0CBE  
                           u520 09D2                             u440 0894                             u425 0B74  
                           u361 0CBA                             u521 09CE                             u441 0890  
                           u370 0A7C                             u530 09E4                             u450 08A4  
                           u371 0A78                             u531 09E0                             u451 089E  
                           u380 0AD2                             u540 09FC                             u460 0968  
                           u381 0ACE                             u541 09F8                             u461 0964  
                           u390 0AFE                             u550 0A10                             u470 0976  
                           u391 0AFA                             u607 0DCC                             u551 0A0C  
                           u471 0972                             u480 0986                             u456 08A6  
                           u617 0C1A                             u481 0982                             u490 099A  
                           u627 0C32                             u491 0996                             u580 0A36  
                           u637 0C48                             u581 0A32                             u565 0A18  
                           u647 0DEC                             u575 0A22                             u567 0A1A  
                           u657 0DFE                             u577 0A24                             u597 0DBA  
                           wreg 000FE8                            l1001 0C26                            l1011 0C5E  
                          l1003 0C2C                            l1013 0C64                            l1005 0C42  
                          l1031 0E38                            l1015 0C6A                            l1007 0C52  
                          l1033 0E42                            l1201 0C8A                            l1017 0C70  
                          l1009 0C58                            l1027 0E32                            l1211 0CC6  
                          l1203 0C92                            l1029 0E36                            l1213 0CCC  
                          l1205 0C9A                            l1221 0A6A                            l1301 0866  
                          l1207 0CA8                            l1231 0AC2                            l1223 0A7C  
                          l1215 0A42                            l1311 0870                            l1303 0868  
                          l1209 0CBE                            l1241 0AFE                            l1233 0AD2  
                          l1225 0A88                            l1217 0A4A                            l1321 08BA  
                          l1313 0874                            l1305 086A                            l1235 0ADA  
                          l1227 0A8E                            l1219 0A66                            l1251 0D02  
                          l1331 0928                            l1323 08C2                            l1315 0878  
                          l1307 086C                            l1253 0B06                            l1181 0BB6  
                          l1237 0AE6                            l1229 0AA6                            l1245 0CDC  
                          l1341 094C                            l1333 092E                            l1325 08FA  
                          l1317 087E                            l1309 086E                            l1255 0B0A  
                          l1263 0B2A                            l1191 0BF0                            l1183 0BBE  
                          l1239 0AEC                            l1247 0CE4                            l1351 0986  
                          l1343 0952                            l1335 093A                            l1327 0916  
                          l1319 0894                            l1265 0B6C                            l1257 0B12  
                          l1193 0BF8                            l1185 0BC6                            l1177 0B9C  
                          l1281 0D52                            l1273 0D2C                            l1249 0D00  
                          l1361 09D2                            l1353 098A                            l1337 0940  
                          l1329 091C                            l1345 0958                            l1259 0B1E  
                          l1195 0BFA                            l1187 0BD4                            l1179 0BA4  
                          l1275 0D3A                            l1371 0A10                            l1363 09D4  
                          l1355 099A                            l1347 0968                            l1339 0946  
                          l1291 081A                            l1285 0E0C                            l1381 0B3E  
                          l1197 0C00                            l1189 0BDA                            l1277 0D46  
                          l1373 0A24                            l1365 09E4                            l1357 09A8  
                          l1349 0976                            l1293 084E                            l1287 0E28  
                          l1199 0C78                            l1279 0D4A                            l1375 0A36  
                          l1367 09FC                            l1359 09C4                            l1295 0850  
                          l1369 0A00                            l1297 0852                            l1299 0854  
                          STR_1 0801                            STR_2 0811                            _TMR0 000FD6  
                          _main 081A                            _itoa 0D2C                            fsr2h 000FDA  
                          indf2 000FDF                            fsr2l 000FD9                            btemp 002A  
                          _utoa 0A42                            prodh 000FF4                            prodl 000FF3  
                          start 002A                    ___param_bank 000000           ?_rotinaAltaPrioridade 0001  
                         ?_main 0001                           ?_itoa 0012                           ?_utoa 0009  
               __end_of___lwdiv 0C10                           i1l109 0022                           i2l103 0D94  
                         i2l104 0DA4                 __end_of___lwmod 0CDC                           _PORTA 000F80  
                         _PORTB 000F81                           _PORTC 000F82                           _PORTD 000F83  
                         _PORTE 000F84                           _TRISA 000F92                           _TRISB 000F93  
                         _TRISC 000F94                           _TRISD 000F95                           _TRISE 000F96  
               __end_of_lcd_dat 0DDA                 __end_of_lcd_cmd 0E0C                 __end_of_lcd_str 0D2C  
                         tablat 000FF5                           ttemp5 002B                           ttemp6 002E  
                         ttemp7 0032                           utoa@c 0011                           utoa@v 000F  
                         status 000FD8                           wtemp8 002B                 __initialization 0E56  
                  __end_of_main 0A42                    __end_of_itoa 0D70                    __end_of_utoa 0B04  
                        ??_main 001A                          ??_itoa 0018                          ??_utoa 000F  
                 __activetblptr 000002                          _ADCON0 000FC2                          _ADRESH 000FC4  
                        _ADRESL 000FC3                __end_of_adc_init 0E56                          i1l1171 001E  
                        i2l1161 0D82                          i2l1163 0D92                          i2l1165 0D98  
                        i2l1167 0D9A                          i2l1159 0D72                          i2l1169 0DA2  
                 main@funcaoRB0 0025          ??_rotinaAltaPrioridade 0001                __end_of_lcd_init 0C78  
                        ___wmul 0E0C                       ??___lwdiv 0006                       ??___lwmod 0006  
                        _lcd_wr 0E6C                       ??_lcd_dat 0003                       ??_lcd_cmd 0003  
                     ??_lcd_str 0007                    __mediumconst 0000                          tblptrh 000FF7  
                        tblptrl 000FF6                          tblptru 000FF8         ??_rotinaBaixaPrioridade 0001  
                    __accesstop 0060         __end_of__initialization 0E5E                   ___rparam_used 000001  
                __pcstackCOMRAM 0001                         ?___wmul 0009                   ??_adc_amostra 0004  
                       ?_lcd_wr 0001                       ?_adc_init 0001                         i2u30_40 0D92  
                       i2u30_41 0D8E                         i2u29_40 0D82                         i2u29_41 0D7E  
                     ?_lcd_init 0001                         __Hparam 0000                         __Lparam 0000  
               __size_of___wmul 0026                         ___lwdiv 0B9C                         ___lwmod 0C78  
                  __psmallconst 0800                 __size_of_lcd_wr 0008                         __pcinit 0E56  
                       __ramtop 0800                      ??_adc_init 0002                         __ptext0 081A  
                       __ptext1 0CDC                         __ptext2 0DA8                         __ptext3 0C10  
                       __ptext4 0DDA                         __ptext5 0E6C                         __ptext6 0D2C  
                       __ptext7 0A42                         __ptext8 0C78                         __ptext9 0B9C  
                       _lcd_dat 0DA8                         _lcd_cmd 0DDA                         _lcd_str 0CDC  
                     _T0CONbits 000FD5             __end_of_adc_amostra 0B9C                      ??_lcd_init 0005  
                       main@str 001C                  __pintcode_body 0D70            end_of_initialization 0E5E  
                       itoa@buf 0012                         itoa@val 0014                   __Lmediumconst 0000  
                       int_func 0D70                         utoa@buf 0009                         utoa@val 000B  
                     _PORTBbits 000F81                       _PORTCbits 000F82                       _PORTEbits 000F84  
                    lcd_dat@val 0004                      lcd_cmd@val 0004  __size_of_rotinaBaixaPrioridade 0012  
 __end_of_rotinaBaixaPrioridade 002A                      lcd_str@str 0005   __size_of_rotinaAltaPrioridade 0DA0  
                   _adc_amostra 0B04                  __end_of___wmul 0E32                  __end_of_lcd_wr 0E74  
           start_initialization 0E56                 main@flag2Botao1 0024                        ??___wmul 000D  
                      ??_lcd_wr 0002               __size_of_adc_init 0024                     __pbssCOMRAM 0026  
                   _flag1Botao1 0028               __size_of_lcd_init 0068                ___lwdiv@dividend 0002  
                     __pintcode 0008                        ?___lwdiv 0002                        ?___lwmod 0002  
                   __pintcodelo 0018                        ?_lcd_dat 0001                        ?_lcd_cmd 0001  
                      ?_lcd_str 0005                     __smallconst 0800                ___lwdiv@quotient 0006  
                ___wmul@product 000D                        _RCONbits 000FD0                      _ADCON0bits 000FC2  
                    _ADCON1bits 000FC1                      _ADCON2bits 000FC0               ___wmul@multiplier 0009  
                     lcd_wr@val 0002                     _INTCON2bits 000FF1                        __Hrparam 0000  
                      __Lrparam 0000                    ?_adc_amostra 0002                __size_of___lwdiv 0074  
              __size_of___lwmod 0064                        _adc_init 0E32                __size_of_lcd_dat 0032  
              __size_of_lcd_cmd 0032                __size_of_lcd_str 0050                 ___lwdiv@divisor 0004  
  __end_of_rotinaAltaPrioridade 0DA8                 ___lwdiv@counter 0008                        __ptext10 0E32  
                      __ptext11 0B04                        __ptext12 0E0C                        _lcd_init 0C10  
                 __size_of_main 0228                   __size_of_itoa 0044                   __size_of_utoa 00C2  
         _rotinaBaixaPrioridade 0018                        _tempoLED 0026                        int$flags 002A  
                      lcd_str@i 0009                        main@tmpi 0022                      _INTCONbits 000FF2  
                      itoa@base 0016                        intlevel1 0000                        intlevel2 0000  
              ___lwmod@dividend 0002                      _OSCCONbits 000FD3                   _contaDebounce 0029  
                      utoa@base 000D                 ___lwmod@divisor 0004                 ___lwmod@counter 0006  
              adc_amostra@canal 0008          ?_rotinaBaixaPrioridade 0001  
